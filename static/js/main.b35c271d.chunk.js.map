{"version":3,"sources":["components/ColorRow.jsx","components/ColorCell.jsx","components/ColorCellLayout.jsx","components/SlideOutPanel.jsx","utils/utils.js","components/MarkerContainer.js","components/TextInput.js","components/ColorPicker.js","components/PageLayout.jsx","components/Button.jsx","project/NotificationManager.jsx","components/CodeBlock.jsx","hooks.js","components/NumberInput.jsx","components/ThemeLayout.jsx","utils.js","components/ThemeOption.jsx","components/TabLayout.jsx","components/Tab.jsx","components/TabPanel.jsx","components/HorizontalLayout.jsx","pages/HomePage.jsx","project/App.jsx","serviceWorker.js","index.js"],"names":["StyledContainer","styled","div","ColorRow","props","StyledIndexMarker","isEditing","ColorCell","color","isIndex","delta","textColor","Color","isDark","markerColor","style","backgroundColor","border","onClick","css","StyledEditingMarker","ColorCellLayout","children","rest","StyledBackground","StyledContent","StyledCloseAction","SlideOutPanel","onClose","useEffect","listener","e","key","document","addEventListener","removeEventListener","ReactDOM","createPortal","body","clamp","value","min","max","Math","round","lerp","a","b","t","Array","map","i","random","toString","join","ElContainer","MarkerContainer","position","setPosition","width","height","colorPickerRef","useRef","mouseDownRef","mouseUpListener","current","mouseMoveListener","clientX","getBoundingClientRect","left","clientY","top","ref","onMouseDown","target","handleColorSelect","ElInput","input","TextInput","getSelectedColor","state","size","x","markerPosition","y","rgb","pickerColor","array","r","g","hex","getParameters","baseColor","defaultHuePosition","hue","defaultHue","rotate","hueRGB","base","baseSaturated","defaultMarkerPosition","ElColorPickerContainer","ElColorPickerTopRow","ElColorPickerBottomRow","ElColorPickerBackground","ElColorPickerMarker","ElColorPickerHueMarker","ColorPicker","active","defaultColor","setColor","scheme","setScheme","useReducer","action","type","data","colorInput","test","huePosition","selectedColor","Error","dispatch","p","background","onChange","PageLayout","button","Button","NotificationContext","React","createContext","ElAnchor","ElNotifications","ElNotification","NotificationManager","useState","notification","setNotification","timeout","setTimeout","clearTimeout","contextValue","send","Provider","ElActions","CodeBlock","text","useContext","textArea","createElement","appendChild","focus","select","execCommand","err","console","error","removeChild","ElButton","ElValue","NumberInput","label","increment","formatter","n","ThemeLayout","calculateColor","targetColor","sign","mix","ElColors","ElColor","ThemeOption","theme","name","colors","colorIndex","_","index","ElTabs","ElTab","selected","ElIndicator","TabLayout","tabContainerRef","indicatorRef","selectedTab","setSelectedTab","components","Children","toArray","tabs","filter","c","displayName","panels","log","useLayoutEffect","tab","containerRect","tabRect","component","Tab","TabPanel","HorizontalLayout","HomePage","savedThemes","useMemo","Object","keys","localStorage","startsWith","replace","JSON","parse","getItem","editingIndex","isSavePanelOpen","saveKey","setItem","stringify","saved","indexValue","segmentLength","dispatchRaw","args","colorSegments","exportText","s","forEach","segmentDelta","segmentIndex","placeholder","save","themeIndex","newColor","App","Boolean","window","location","hostname","match","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b35c271d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ColorRow = (props) => {\r\n  return <StyledContainer {...props} />;\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n  display: grid;\r\n  gap: 30px;\r\n  grid-auto-flow: column;\r\n  justify-content: start;\r\n`;\r\n\r\nexport default ColorRow;\r\n","import React from \"react\";\r\nimport Color from \"color\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ColorCell = ({ color, isIndex, isEditing, delta }) => {\r\n  const textColor = Color(color).isDark() ? \"white\" : \"black\";\r\n  const markerColor = Color(color).isDark()\r\n    ? \"var(--color-neutral-700)\"\r\n    : \"var(--color-neutral-200)\";\r\n\r\n  return (\r\n    <StyledContainer style={{ backgroundColor: color }}>\r\n      {isEditing && <span style={{ color: textColor }}>{delta}%</span>}\r\n      {isIndex && (\r\n        <StyledIndexMarker\r\n          isEditing={isEditing}\r\n          style={{\r\n            border: `1px solid ${markerColor}`,\r\n          }}\r\n        />\r\n      )}\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n  position: relative;\r\n  height: 80px;\r\n  width: 80px;\r\n\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledIndexMarker = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  height: ${(props) => (props.isEditing ? 60 : 40)}px;\r\n  width: ${(props) => (props.isEditing ? 60 : 40)}px;\r\n  border-radius: 30px;\r\n\r\n  transition: 0.5s;\r\n`;\r\n\r\nexport default ColorCell;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst ColorCellLayout = ({ children, isEditing, onClick, ...rest }) => {\r\n  return (\r\n    <StyledContainer {...rest} onClick={onClick}>\r\n      {children}\r\n      {isEditing && <StyledEditingMarker />}\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n  position: relative;\r\n\r\n  background-color: var(--color-neutral-600);\r\n  border: 1px solid var(--color-neutral-600);\r\n\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  gap: 1px;\r\n  align-items: center;\r\n  justify-content: start;\r\n  justify-self: start;\r\n\r\n  ${(props) =>\r\n    props.onClick\r\n      ? css`\r\n          cursor: pointer;\r\n\r\n          &:hover {\r\n            border: 1px solid var(--color-neutral-700);\r\n          }\r\n        `\r\n      : \"\"}\r\n`;\r\n\r\nconst StyledEditingMarker = styled.div`\r\n  position: absolute;\r\n  top: -10px;\r\n  left: -10px;\r\n  right: -10px;\r\n  bottom: -10px;\r\n\r\n  border: 1px solid white;\r\n`;\r\n\r\nexport default ColorCellLayout;\r\n","import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SlideOutPanel = ({ onClose, children }) => {\r\n  useEffect(() => {\r\n    const listener = (e) => {\r\n      if (e.key === \"Escape\") {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", listener);\r\n\r\n    return () => document.removeEventListener(\"keydown\", listener);\r\n  }, []); // eslint-disable-line\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <StyledBackground onClick={() => onClose()} />\r\n      <StyledContainer>\r\n        <StyledContent>{children}</StyledContent>\r\n        <StyledCloseAction onClick={() => onClose()}>Close</StyledCloseAction>\r\n      </StyledContainer>\r\n    </>,\r\n    document.body\r\n  );\r\n};\r\n\r\nconst StyledBackground = styled.div`\r\n  position: fixed;\r\n  top: 0px;\r\n  left: 0px;\r\n  bottom: 0px;\r\n  right: 0px;\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n  position: fixed;\r\n  top: 0px;\r\n  right: 0px;\r\n  bottom: 0px;\r\n  width: 600px;\r\n  background-color: var(--color-neutral-400);\r\n  border-left: 1px solid var(--color-neutral-500);\r\n  box-shadow: var(--box-shadow-3);\r\n\r\n  display: grid;\r\n  grid-template-rows: 1fr auto;\r\n  gap: 30px;\r\n`;\r\n\r\nconst StyledContent = styled.div`\r\n  padding: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst StyledCloseAction = styled.div`\r\n  padding: 45px;\r\n  background-color: var(--color-neutral-300);\r\n\r\n  font-size: 20px;\r\n  text-align: center;\r\n\r\n  transition: 0.5s;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: var(--color-neutral-500);\r\n  }\r\n`;\r\n\r\nexport default SlideOutPanel;\r\n","const toPaddedHexString = (num, len) => {\r\n  const str = num.toString(16);\r\n  return \"0\".repeat(len - str.length) + str;\r\n};\r\n\r\nconst numbersToHex = (r, g, b) =>\r\n  `#${toPaddedHexString(r, 2)}${toPaddedHexString(g, 2)}${toPaddedHexString(\r\n    b,\r\n    2\r\n  )}`;\r\n\r\nexport const clamp = (value, min = 0, max = 1) =>\r\n  Math.round(Math.min(Math.max(value, min), max));\r\n\r\nexport const clamp0to255 = value =>\r\n  Math.round(Math.min(Math.max(value, 0), 255));\r\n\r\nexport const lerp = (a, b, t) => a + (b - a) * t;\r\n\r\nexport const RGBToHSL = rgb => {\r\n  // Make r, g, and b fractions of 1\r\n  const r = (rgb.r /= 255);\r\n  const g = (rgb.g /= 255);\r\n  const b = (rgb.b /= 255);\r\n\r\n  // Find greatest and smallest channel values\r\n  let cmin = Math.min(r, g, b);\r\n  let cmax = Math.max(r, g, b);\r\n  let delta = cmax - cmin;\r\n  let h = 0;\r\n  let s = 0;\r\n  let l = 0;\r\n\r\n  // Calculate hue\r\n  // No difference\r\n  if (delta == 0) h = 0;\r\n  // Red is max\r\n  else if (cmax == r) h = ((g - b) / delta) % 6;\r\n  // Green is max\r\n  else if (cmax == g) h = (b - r) / delta + 2;\r\n  // Blue is max\r\n  else h = (r - g) / delta + 4;\r\n\r\n  h = Math.round(h * 60);\r\n\r\n  // Make negative hues positive behind 360°\r\n  if (h < 0) h += 360;\r\n\r\n  // Calculate lightness\r\n  l = (cmax + cmin) / 2;\r\n\r\n  // Calculate saturation\r\n  s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\r\n\r\n  // Multiply l and s by 100\r\n  s = Math.abs(s * 100);\r\n  l = Math.abs(l * 100);\r\n\r\n  return { h, s, l };\r\n};\r\n\r\nexport const HSLToRGB = hsl => {\r\n  // Must be fractions of 1\r\n  const h = hsl.h;\r\n  const s = hsl.s / 100;\r\n  const l = hsl.l / 100;\r\n\r\n  let c = (1 - Math.abs(2 * l - 1)) * s,\r\n    x = c * (1 - Math.abs(((h / 60) % 2) - 1)),\r\n    m = l - c / 2,\r\n    r = 0,\r\n    g = 0,\r\n    b = 0;\r\n\r\n  if (0 <= h && h < 60) {\r\n    r = c;\r\n    g = x;\r\n    b = 0;\r\n  } else if (60 <= h && h < 120) {\r\n    r = x;\r\n    g = c;\r\n    b = 0;\r\n  } else if (120 <= h && h < 180) {\r\n    r = 0;\r\n    g = c;\r\n    b = x;\r\n  } else if (180 <= h && h < 240) {\r\n    r = 0;\r\n    g = x;\r\n    b = c;\r\n  } else if (240 <= h && h < 300) {\r\n    r = x;\r\n    g = 0;\r\n    b = c;\r\n  } else if (300 <= h && h < 360) {\r\n    r = c;\r\n    g = 0;\r\n    b = x;\r\n  }\r\n  r = Math.round((r + m) * 255);\r\n  g = Math.round((g + m) * 255);\r\n  b = Math.round((b + m) * 255);\r\n\r\n  return { r, g, b };\r\n};\r\n\r\nexport const HSLToHex = hsl => {\r\n  const rgb = HSLToRGB(hsl);\r\n\r\n  return RGBToHex(rgb);\r\n};\r\n\r\nexport const getTextDark = color => {\r\n  const rgb = hexToRGB(color);\r\n  return rgb.r * 0.299 + rgb.g * 0.587 + rgb.b * 0.114 > 186;\r\n};\r\n\r\nexport const hexToRGB = hex => {\r\n  const r = parseInt(hex.slice(1, 3), 16);\r\n  const g = parseInt(hex.slice(3, 5), 16);\r\n  const b = parseInt(hex.slice(5, 7), 16);\r\n\r\n  return { r, g, b };\r\n};\r\n\r\nexport const hexToHSL = hex => {\r\n  const rgb = hexToRGB(hex);\r\n  return RGBToHSL(rgb);\r\n};\r\n\r\nexport const RGBToHex = rgb => numbersToHex(rgb.r, rgb.g, rgb.b);\r\n\r\nexport const generateHue = (color, gain) => {\r\n  const r0 = color.rgb.r;\r\n  const g0 = color.rgb.g;\r\n  const b0 = color.rgb.b;\r\n\r\n  const mult = Math.abs(gain / 100);\r\n  const target = gain > 0 ? 255 : 0;\r\n\r\n  const r = clamp0to255(lerp(r0, target, mult));\r\n  const g = clamp0to255(lerp(g0, target, mult));\r\n  const b = clamp0to255(lerp(b0, target, mult));\r\n\r\n  return RGBToHex({ r, g, b });\r\n};\r\n\r\nexport const combineRGB = (tarhexToRGB, addedRGB, strength) => {\r\n  const totalAdd = addedRGB.r + addedRGB.g + addedRGB.b;\r\n  const averageAdd = clamp0to255((totalAdd / 3) * strength);\r\n  const r = clamp0to255(tarhexToRGB.r + addedRGB.r * strength - averageAdd);\r\n  const g = clamp0to255(tarhexToRGB.g + addedRGB.g * strength - averageAdd);\r\n  const b = clamp0to255(tarhexToRGB.b + addedRGB.b * strength - averageAdd);\r\n\r\n  return numbersToHex(r, g, b);\r\n};\r\n\r\nexport const generateRandomString = [...Array(10)]\r\n  .map(i => (~~(Math.random() * 36)).toString(36))\r\n  .join(\"\");\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { clamp } from \"../utils/utils\";\r\n\r\nconst MarkerContainer = ({\r\n  position,\r\n  setPosition,\r\n  width = 100,\r\n  height = 100,\r\n  style,\r\n  ...rest\r\n}) => {\r\n  const colorPickerRef = useRef();\r\n  const mouseDownRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    const mouseUpListener = () => (mouseDownRef.current = false);\r\n    const mouseMoveListener = e => {\r\n      if (mouseDownRef.current) {\r\n        setPosition([\r\n          clamp(\r\n            e.clientX - colorPickerRef.current.getBoundingClientRect().left,\r\n            0,\r\n            width\r\n          ),\r\n          clamp(\r\n            e.clientY - colorPickerRef.current.getBoundingClientRect().top,\r\n            0,\r\n            height\r\n          )\r\n        ]);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mouseup\", mouseUpListener);\r\n    document.addEventListener(\"mousemove\", mouseMoveListener);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mouseup\", mouseUpListener);\r\n      document.removeEventListener(\"mousemove\", mouseMoveListener);\r\n    };\r\n  }, [width, height, setPosition]);\r\n\r\n  const handleColorSelect = e => {\r\n    if (mouseDownRef.current) {\r\n      setPosition([\r\n        e.clientX - e.target.getBoundingClientRect().left,\r\n        e.clientY - e.target.getBoundingClientRect().top\r\n      ]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ElContainer\r\n      {...rest}\r\n      ref={colorPickerRef}\r\n      onMouseDown={e => {\r\n        mouseDownRef.current = true;\r\n        handleColorSelect(e);\r\n      }}\r\n      style={{\r\n        ...style,\r\n        width,\r\n        height\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst ElContainer = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport default MarkerContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TextInput = ({ value, ...rest }) => {\r\n  return <ElInput value={value || \"\"} {...rest} />;\r\n};\r\n\r\nconst ElInput = styled.input`\r\n  border: 1px solid var(--color-neutral-500);\r\n  background-color: var(--color-neutral-300);\r\n  padding: 0px 15px;\r\n  height: 30px;\r\n\r\n  color: white;\r\n  line-height: 28px;\r\n\r\n  &::placeholder {\r\n    color: var(--color-neutral-500);\r\n  }\r\n`;\r\n\r\nexport default TextInput;\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport color from \"color\";\r\nimport MarkerContainer from \"./MarkerContainer\";\r\nimport TextInput from \"./TextInput\";\r\nimport { lerp } from \"../utils/utils\";\r\n\r\nconst ColorPicker = ({\r\n  color: defaultColor = \"#ff0000\",\r\n  setColor,\r\n  scheme,\r\n  setScheme,\r\n}) => {\r\n  const size = 400;\r\n  const sizeHue = 60;\r\n\r\n  const [state, dispatch] = useReducer(\r\n    (state, action) => {\r\n      const [type, data] = action;\r\n\r\n      switch (type) {\r\n        case \"COLOR_INPUT\": {\r\n          state.colorInput = data;\r\n\r\n          if (/^#[0-9a-f]{6}$/i.test(state.colorInput)) {\r\n            const {\r\n              defaultHuePosition,\r\n              defaultHue,\r\n              defaultMarkerPosition,\r\n            } = getParameters(state.colorInput, size);\r\n\r\n            state.pickerColor = defaultHue;\r\n            state.huePosition = defaultHuePosition;\r\n            state.markerPosition = defaultMarkerPosition;\r\n            state.selectedColor = getSelectedColor(state, size);\r\n          }\r\n\r\n          return { ...state };\r\n        }\r\n        case \"SET_MARKER_POSITION\": {\r\n          state.markerPosition = data;\r\n          state.selectedColor = getSelectedColor(state, size);\r\n          state.colorInput = state.selectedColor;\r\n\r\n          return { ...state };\r\n        }\r\n        case \"SET_HUE_POSITION\": {\r\n          const hue = color(\"#ff0000\")\r\n            .rotate((data[1] / size) * 360)\r\n            .hex();\r\n\r\n          state.huePosition = data;\r\n          state.pickerColor = hue;\r\n          state.selectedColor = getSelectedColor(state, size);\r\n          state.colorInput = state.selectedColor;\r\n\r\n          return { ...state };\r\n        }\r\n        default: {\r\n          throw new Error(`${type} is not a supported action.`);\r\n        }\r\n      }\r\n    },\r\n    null,\r\n    () => {\r\n      const {\r\n        defaultHuePosition,\r\n        defaultHue,\r\n        defaultMarkerPosition,\r\n      } = getParameters(defaultColor, size);\r\n\r\n      return {\r\n        selectedColor: defaultColor,\r\n        colorInput: defaultColor,\r\n        pickerColor: defaultHue,\r\n        markerPosition: defaultMarkerPosition,\r\n        huePosition: [0, defaultHuePosition],\r\n      };\r\n    }\r\n  );\r\n\r\n  const {\r\n    selectedColor,\r\n    colorInput,\r\n    pickerColor,\r\n    markerPosition,\r\n    huePosition,\r\n  } = state;\r\n\r\n  // Propagate any changes to the parent\r\n  useEffect(() => {\r\n    if (defaultColor !== selectedColor) {\r\n      setColor(selectedColor);\r\n    }\r\n  }, [selectedColor]); // eslint-disable-line\r\n\r\n  // // Reset on value change\r\n  // useEffect(() => {\r\n  //   if (defaultColor !== selectedColor) {\r\n  //     dispatch([\"COLOR_INPUT\", defaultColor.toUpperCase()]);\r\n  //   }\r\n  // }, [defaultColor]); // eslint-disable-line\r\n\r\n  return (\r\n    <ElColorPickerContainer>\r\n      <ElColorPickerTopRow>\r\n        <MarkerContainer\r\n          position={markerPosition}\r\n          setPosition={(p) => dispatch([\"SET_MARKER_POSITION\", p])}\r\n          width={size}\r\n          height={size}\r\n          style={{\r\n            backgroundColor: color(pickerColor),\r\n          }}\r\n        >\r\n          <ElColorPickerBackground\r\n            style={{\r\n              background: `linear-gradient(to left, transparent, white)`,\r\n            }}\r\n          />\r\n          <ElColorPickerBackground\r\n            style={{\r\n              background: \"linear-gradient(to top, black, transparent)\",\r\n            }}\r\n          />\r\n          <ElColorPickerMarker\r\n            style={{\r\n              left: `${markerPosition[0] / 4}%`,\r\n              top: `${markerPosition[1] / 4}%`,\r\n              backgroundColor: selectedColor,\r\n            }}\r\n          />\r\n        </MarkerContainer>\r\n        <MarkerContainer\r\n          position={huePosition}\r\n          setPosition={(p) => {\r\n            dispatch([\"SET_HUE_POSITION\", p]);\r\n          }}\r\n          width={sizeHue}\r\n          height={size}\r\n          style={{\r\n            background:\r\n              \"linear-gradient(to bottom, #ff0000, #ffff00, #00ff00, #00ffff, #0000ff, #ff00ff, #ff0000)\",\r\n          }}\r\n        >\r\n          <ElColorPickerHueMarker style={{ top: `${huePosition[1] / 4}%` }} />\r\n        </MarkerContainer>\r\n      </ElColorPickerTopRow>\r\n      <ElColorPickerBottomRow>\r\n        <div>\r\n          <TextInput\r\n            value={colorInput}\r\n            onChange={(e) => dispatch([\"COLOR_INPUT\", e.target.value])}\r\n          />\r\n        </div>\r\n        {/* <div>\r\n          <div className=\"small-header\">Color Scheme</div>\r\n          <ElColorSchemeOptions>\r\n            {[\r\n              { label: \"None\", value: null },\r\n              { label: \"Analogous\", value: \"analogous\" },\r\n              { label: \"Complementary\", value: \"complementary\" },\r\n              { label: \"Split Complementary\", value: \"split-complementary\" },\r\n              { label: \"Triadic\", value: \"triadic\" },\r\n              { label: \"Tetradic\", value: \"tetradic\" },\r\n            ].map((o, index) => (\r\n              <ElColorSchemeOption\r\n                key={index}\r\n                active={scheme === o.value}\r\n                onClick={() => setScheme(o.value)}\r\n              >\r\n                {o.label}\r\n              </ElColorSchemeOption>\r\n            ))}\r\n          </ElColorSchemeOptions>\r\n        </div> */}\r\n      </ElColorPickerBottomRow>\r\n    </ElColorPickerContainer>\r\n  );\r\n};\r\n\r\nconst getSelectedColor = (state, size) => {\r\n  const x = state.markerPosition[0] / size;\r\n  const y = state.markerPosition[1] / size;\r\n\r\n  const rgb = color(state.pickerColor).rgb().array();\r\n  const r = lerp(lerp(255, rgb[0], x), 0, y);\r\n  const g = lerp(lerp(255, rgb[1], x), 0, y);\r\n  const b = lerp(lerp(255, rgb[2], x), 0, y);\r\n  const selectedColor = color([r, g, b]).hex();\r\n\r\n  return selectedColor;\r\n};\r\n\r\nconst getParameters = (baseColor, size) => {\r\n  const defaultHuePosition = (color(baseColor).hue() / 360) * size;\r\n  const defaultHue = color(\"#ff0000\")\r\n    .rotate((defaultHuePosition / size) * 360)\r\n    .hex();\r\n\r\n  const hueRGB = color(defaultHue).rgb().array();\r\n  const base = color(baseColor).rgb().array();\r\n  const max = Math.max(...base);\r\n  const y = size - (max / 255) * size;\r\n  const baseSaturated = base.map((x) => (x * 255) / max);\r\n\r\n  const toWhite =\r\n    baseSaturated[0] !== 255\r\n      ? (baseSaturated[0] - hueRGB[0]) / (255 - hueRGB[0])\r\n      : baseSaturated[1] !== 255\r\n      ? (baseSaturated[1] - hueRGB[1]) / (255 - hueRGB[1])\r\n      : (baseSaturated[2] - hueRGB[2]) / (255 - hueRGB[2]);\r\n\r\n  const x = size - toWhite * size;\r\n\r\n  return {\r\n    defaultHuePosition,\r\n    defaultHue,\r\n    defaultMarkerPosition: [x, y],\r\n  };\r\n};\r\n\r\nconst ElColorPickerContainer = styled.div`\r\n  display: grid;\r\n  grid-gap: 30px;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst ElColorPickerTopRow = styled.div`\r\n  display: grid;\r\n  grid-gap: 30px;\r\n  grid-auto-flow: column;\r\n  align-items: flex-start;\r\n  justify-items: flex-start;\r\n`;\r\n\r\nconst ElColorPickerBottomRow = styled.div`\r\n  display: grid;\r\n  grid-gap: 30px;\r\n  grid-auto-flow: column;\r\n`;\r\n\r\nconst ElColorPickerBackground = styled.div`\r\n  position: absolute;\r\n  top: 0%;\r\n  left: 0%;\r\n  bottom: 0%;\r\n  right: 0%;\r\n\r\n  pointer-events: none;\r\n`;\r\n\r\nconst ElColorPickerMarker = styled.div`\r\n  position: absolute;\r\n  height: 16px;\r\n  width: 16px;\r\n  transform: translateX(-50%) translateY(-50%);\r\n  border: 2px solid white;\r\n  background-color: transparent;\r\n  border-radius: 10px;\r\n\r\n  pointer-events: none;\r\n`;\r\n\r\nconst ElColorPickerHueMarker = styled.div`\r\n  position: absolute;\r\n  width: calc(100% + 10px);\r\n  height: 2px;\r\n  transform: translateX(-5px) translateY(-1px);\r\n  background-color: white;\r\n`;\r\n\r\nconst ElColorSchemeOptions = styled.div`\r\n  display: grid;\r\n  grid-gap: 10px;\r\n`;\r\n\r\nconst ElColorSchemeOption = styled.div`\r\n  height: 30px;\r\n  padding: 0px 15px;\r\n  background-color: var(--color-neutral-400);\r\n  border: 1px solid var(--color-neutral-500);\r\n\r\n  color: var(--color-neutral-500);\r\n\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: var(--color-neutral-500);\r\n    background-color: var(--color-neutral-600);\r\n    color: white;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      background-color: var(--color-neutral-500);\r\n      background-color: var(--color-neutral-600);\r\n      color: white;\r\n    `}\r\n`;\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\"\r\n\r\nconst PageLayout = ({ children }) => {\r\n  return <StyledContainer>\r\n    {children}\r\n  </StyledContainer>\r\n}\r\n\r\nconst StyledContainer = styled.div`\r\n  padding: 30px;\r\n\r\n  display: grid;\r\n  gap: 30px;\r\n`\r\n\r\nexport default PageLayout;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = (props) => <ElContainer {...props} />;\r\n\r\nconst ElContainer = styled.button`\r\n  height: 30px;\r\n  padding: 0px 15px;\r\n  border: 1px solid var(--color-neutral-500);\r\n  background-color: var(--color-neutral-300);\r\n\r\n  font-family: Roboto, Arial, sans-serif;\r\n  color: white;\r\n  text-align: center;\r\n  line-height: 30px;\r\n\r\n  transition: 0.25s;\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: var(--color-neutral-400);\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const NotificationContext = React.createContext();\r\n\r\nconst NotificationManager = ({ children }) => {\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setNotification(null);\r\n    }, 5000);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [notification]);\r\n\r\n  const contextValue = useRef({\r\n    send: setNotification,\r\n  });\r\n\r\n  return (\r\n    <NotificationContext.Provider value={contextValue.current}>\r\n      {ReactDOM.createPortal(\r\n        <ElAnchor>\r\n          <ElNotifications>\r\n            {notification && (\r\n              <ElNotification key={notification}>{notification}</ElNotification>\r\n            )}\r\n          </ElNotifications>\r\n        </ElAnchor>,\r\n        document.body\r\n      )}\r\n      {children}\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n\r\nconst ElAnchor = styled.div`\r\n  position: fixed;\r\n  top: 0px;\r\n  left: 0px;\r\n  right: 0px;\r\n  bottom: 0px;\r\n  padding: 30px;\r\n\r\n  pointer-events: none;\r\n`;\r\n\r\nconst ElNotifications = styled.div`\r\n  display: grid;\r\n  justify-content: center;\r\n  align-content: flex-start;\r\n`;\r\n\r\nconst ElNotification = styled.div`\r\n  padding: 15px 30px;\r\n  background-color: var(--color-neutral-500);\r\n  border: 1px solid var(--color-neutral-600);\r\n  border-radius: 5px;\r\n\r\n  color: white;\r\n  text-align: center;\r\n`;\r\n\r\nexport default NotificationManager;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../components/Button\";\r\nimport { useNotificationContext } from \"../hooks\";\r\n\r\nconst CodeBlock = ({ text }) => {\r\n  const notification = useNotificationContext();\r\n\r\n  return (\r\n    <ElContainer>\r\n      {text}\r\n      <ElActions>\r\n        <Button\r\n          onClick={() => {\r\n            var textArea = document.createElement(\"textarea\");\r\n            textArea.value = text;\r\n\r\n            // Avoid scrolling to bottom\r\n            textArea.style.top = \"0\";\r\n            textArea.style.left = \"0\";\r\n            textArea.style.position = \"fixed\";\r\n\r\n            document.body.appendChild(textArea);\r\n            textArea.focus();\r\n            textArea.select();\r\n\r\n            try {\r\n              var successful = document.execCommand(\"copy\");\r\n\r\n              if (successful) {\r\n                notification.send(\"Copied to Clipboard!\");\r\n              } else {\r\n                notification.send(\"Failed to Copy to Clipboard\");\r\n              }\r\n            } catch (err) {\r\n              console.error(\"Unable to copy\", err);\r\n\r\n              notification.send(\"Failed to Copy to Clipboard\");\r\n            }\r\n\r\n            document.body.removeChild(textArea);\r\n          }}\r\n        >\r\n          Copy to Clipboard\r\n        </Button>\r\n      </ElActions>\r\n    </ElContainer>\r\n  );\r\n};\r\n\r\nconst ElContainer = styled.div`\r\n  position: relative;\r\n  background-color: var(--color-neutral-300);\r\n  border: 1px solid var(--color-neutral-500);\r\n  padding: 30px;\r\n  max-width: 800px;\r\n\r\n  font-family: \"Roboto Mono\", monospace;\r\n  white-space: pre-line;\r\n`;\r\n\r\nconst ElActions = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n  right: 30px;\r\n\r\n  display: grid;\r\n  gap: 30px;\r\n  justify-items: end;\r\n`;\r\n\r\nexport default CodeBlock;\r\n","import { useMediaQuery } from \"react-responsive\";\r\nimport { NotificationContext } from \"./project/NotificationManager\";\r\nimport { useContext } from \"react\";\r\n\r\nconst MEDIA_QUERY_SIZES = {\r\n  small: 500,\r\n  medium: 750,\r\n  large: 1150,\r\n};\r\n\r\nexport const useResponsive = (size) => {\r\n  const query = MEDIA_QUERY_SIZES[size];\r\n\r\n  if (!query) {\r\n    throw new Error(`size \"${size}\" is not a valid size`);\r\n  }\r\n\r\n  return useMediaQuery({ query });\r\n};\r\n\r\nexport const useNotificationContext = () => useContext(NotificationContext);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NumberInput = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  increment = 1,\r\n  formatter = (n) => n,\r\n}) => {\r\n  return (\r\n    <ElContainer>\r\n      <div>{label}</div>\r\n      <ElButton onClick={() => onChange(value - increment)}>–</ElButton>\r\n      <ElValue>{formatter(value)}</ElValue>\r\n      <ElButton onClick={() => onChange(value + increment)}>+</ElButton>\r\n    </ElContainer>\r\n  );\r\n};\r\n\r\nconst ElContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 50px 80px 50px;\r\n  align-items: center;\r\n  gap: 15px;\r\n`;\r\n\r\nconst ElButton = styled.button`\r\n  border: 1px solid var(--color-neutral-500);\r\n  background-color: var(--color-neutral-300);\r\n  height: 30px;\r\n\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n\r\n  font-size: 24px;\r\n  color: var(--color-neutral-700);\r\n\r\n  cursor: pointer;\r\n\r\n  user-select: none;\r\n\r\n  &:hover {\r\n    border: 1px solid var(--color-neutral-700);\r\n    color: white;\r\n  }\r\n\r\n  &:focus {\r\n    border: 1px solid var(--color-primary-500);\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst ElValue = styled.div`\r\n  border: 1px solid var(--color-neutral-500);\r\n  background-color: var(--color-neutral-300);\r\n  height: 30px;\r\n\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n`;\r\n\r\nexport default NumberInput;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ThemeLayout = (props) => <ElContainer {...props} />;\r\n\r\nconst ElContainer = styled.div`\r\n  display: grid;\r\n  gap: 30px;\r\n`;\r\n\r\nexport default ThemeLayout;\r\n","import Color from \"color\";\r\n\r\nexport const calculateColor = (base, delta) => {\r\n  const baseColor = Color(base);\r\n  const targetColor = Color(delta > 0 ? \"white\" : \"black\");\r\n  const sign = Math.sign(delta);\r\n  const newColor = baseColor.mix(targetColor, (sign * delta) / 100);\r\n  return newColor.hex();\r\n};\r\n\r\nexport const generateRandomString = () =>\r\n  [...Array(10)].map((i) => (~~(Math.random() * 36)).toString(36)).join(\"\");\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { calculateColor } from \"../utils\";\r\n\r\nconst ThemeOption = ({ theme, ...rest }) => {\r\n  return (\r\n    <ElContainer {...rest}>\r\n      <div>{theme.name || \"Untitled Theme\"}</div>\r\n      <ElColors>\r\n        {theme.colors.map((color, colorIndex) => (\r\n          <ElColor style={{ backgroundColor: color.color }} key={colorIndex}>\r\n            {[...new Array(9)].map((_, i) => {\r\n              const delta = (i - color.index) * color.increment;\r\n              return (\r\n                <div\r\n                  key={i}\r\n                  style={{\r\n                    backgroundColor: calculateColor(color.color, delta),\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          </ElColor>\r\n        ))}\r\n      </ElColors>\r\n    </ElContainer>\r\n  );\r\n};\r\n\r\nconst ElContainer = styled.div`\r\n  display: grid;\r\n  gap: 5px;\r\n\r\n  color: var(--color-neutral-700);\r\n\r\n  cursor: pointer;\r\n\r\n  transition: 0.25s;\r\n\r\n  &:hover {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst ElColors = styled.div`\r\n  height: 120px;\r\n  border: 1px solid var(--color-neutral-600);\r\n  background-color: var(--color-neutral-600);\r\n\r\n  display: grid;\r\n  gap: 1px;\r\n  grid-auto-columns: 1fr;\r\n\r\n  transition: 0.25s;\r\n\r\n  ${ElContainer}:hover & {\r\n    border: 1px solid white;\r\n  }\r\n`;\r\n\r\nconst ElColor = styled.div`\r\n  background-color: var(--color-neutral-600);\r\n  padding-left: 100px;\r\n\r\n  display: grid;\r\n  gap: 1px;\r\n  grid-auto-flow: column;\r\n  grid-auto-columns: 1fr;\r\n`;\r\n\r\nexport default ThemeOption;\r\n","import React, { useState, useRef, useLayoutEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TabLayout = ({ children }) => {\r\n  const tabContainerRef = useRef();\r\n  const indicatorRef = useRef();\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n\r\n  const components = React.Children.toArray(children);\r\n  const tabs = components.filter((c) => c.type?.displayName === \"Tab\");\r\n  const panels = components.filter((c) => c.type?.displayName === \"TabPanel\");\r\n\r\n  console.log({ components });\r\n\r\n  useLayoutEffect(() => {\r\n    const tab = tabContainerRef.current.children[selectedTab];\r\n\r\n    if (tab) {\r\n      const containerRect = tabContainerRef.current.getBoundingClientRect();\r\n      const tabRect = tab.getBoundingClientRect();\r\n\r\n      indicatorRef.current.style.left =\r\n        tabRect.left - containerRect.left + \"px\";\r\n      indicatorRef.current.style.width = tabRect.width + \"px\";\r\n    }\r\n  }, [selectedTab]);\r\n\r\n  return (\r\n    <ElContainer>\r\n      <ElTabs ref={tabContainerRef}>\r\n        {tabs.map((component, index) => (\r\n          <ElTab\r\n            key={index}\r\n            {...component.props}\r\n            selected={index === selectedTab}\r\n            onClick={() => setSelectedTab(index)}\r\n          />\r\n        ))}\r\n        <ElIndicator ref={indicatorRef} style={{ width: tabs[selectedTab] }} />\r\n      </ElTabs>\r\n      <div>{panels[selectedTab]}</div>\r\n    </ElContainer>\r\n  );\r\n};\r\n\r\nconst ElContainer = styled.div`\r\n  display: grid;\r\n  gap: 30px;\r\n`;\r\n\r\nconst ElTabs = styled.div`\r\n  position: relative;\r\n  height: 30px;\r\n  border-bottom: 2px solid var(--color-neutral-500);\r\n\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  grid-gap: 30px;\r\n  justify-content: start;\r\n  align-items: center;\r\n`;\r\n\r\nconst ElTab = styled.div`\r\n  position: relative;\r\n  height: 30px;\r\n\r\n  display: grid;\r\n  align-items: center;\r\n\r\n  color: ${(props) => (props.selected ? \"white\" : \"var(--color-neutral-700)\")};\r\n\r\n  cursor: pointer;\r\n\r\n  transition: 0.25s;\r\n\r\n  &:hover {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst ElIndicator = styled.div`\r\n  position: absolute;\r\n  bottom: -2px;\r\n  height: 2px;\r\n  background-color: var(--color-primary-600);\r\n  box-shadow: 0px 0px 2px var(--color-primary-600);\r\n\r\n  transition: 0.5s;\r\n`;\r\n\r\nexport default TabLayout;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Tab = ({ children }) => {\r\n  return <ElContainer>{children}</ElContainer>;\r\n};\r\n\r\nTab.displayName = \"Tab\";\r\n\r\nconst ElContainer = styled.div`\r\n  position: relative;\r\n  height: 30px;\r\n\r\n  display: grid;\r\n  align-items: center;\r\n`;\r\n\r\nexport default Tab;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TabPanel = (props) => <ElContainer {...props} />;\r\n\r\nTabPanel.displayName = \"TabPanel\";\r\n\r\nconst ElContainer = styled.div`\r\n  display: grid;\r\n  gap: 30px;\r\n`;\r\n\r\nexport default TabPanel;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HorizontalLayout = (props) => <ElContainer {...props} />;\r\n\r\nconst ElContainer = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  gap: 30px;\r\n  align-items: center;\r\n  justify-content: start;\r\n`;\r\n\r\nexport default HorizontalLayout;\r\n","import React, { useMemo, useReducer } from \"react\";\r\nimport ColorRow from \"../components/ColorRow\";\r\nimport ColorCell from \"../components/ColorCell\";\r\nimport ColorCellLayout from \"../components/ColorCellLayout\";\r\nimport SlideOutPanel from \"../components/SlideOutPanel\";\r\nimport ColorPicker from \"../components/ColorPicker\";\r\nimport PageLayout from \"../components/PageLayout\";\r\nimport CodeBlock from \"../components/CodeBlock\";\r\nimport TextInput from \"../components/TextInput\";\r\nimport NumberInput from \"../components/NumberInput\";\r\nimport Button from \"../components/Button\";\r\nimport ThemeLayout from \"../components/ThemeLayout\";\r\nimport ThemeOption from \"../components/ThemeOption\";\r\nimport TabLayout from \"../components/TabLayout\";\r\nimport Tab from \"../components/Tab\";\r\nimport TabPanel from \"../components/TabPanel\";\r\nimport HorizontalLayout from \"../components/HorizontalLayout\";\r\nimport { calculateColor, generateRandomString } from \"../utils\";\r\n\r\nconst HomePage = () => {\r\n  const savedThemes = useMemo(() => {\r\n    const keys = [...Object.keys(localStorage)];\r\n    const themes = keys\r\n      .filter((key) => key.startsWith(\"COLOR-THEME:\"))\r\n      .map((key) => ({\r\n        key: key.replace(\"COLOR-THEME:\", \"\"),\r\n        theme: JSON.parse(localStorage.getItem(key)),\r\n      }));\r\n\r\n    return themes;\r\n  });\r\n\r\n  const [state, dispatchRaw] = useReducer(\r\n    (state, action) => {\r\n      const [type, data] = action;\r\n\r\n      switch (type) {\r\n        case \"SET_EDITING_INDEX\": {\r\n          const [value] = data;\r\n          state.editingIndex = value;\r\n          return { ...state };\r\n        }\r\n        case \"TOGGLE_SAVE_PANEL\": {\r\n          const [value] = data;\r\n          state.isSavePanelOpen = value;\r\n          return { ...state };\r\n        }\r\n        case \"SAVE\": {\r\n          const key = state.saveKey || generateRandomString();\r\n\r\n          localStorage.setItem(\r\n            `COLOR-THEME:${key}`,\r\n            JSON.stringify(state.theme)\r\n          );\r\n\r\n          state.saveKey = key;\r\n          state.saved = true;\r\n\r\n          return { ...state };\r\n        }\r\n        case \"LOAD\": {\r\n          const [key, theme] = data;\r\n\r\n          state.saveKey = key;\r\n          state.theme = theme;\r\n          state.saved = true;\r\n          return { ...state };\r\n        }\r\n        case \"SET_NAME\": {\r\n          const [name] = data;\r\n          state.theme.name = name;\r\n          state.saved = false;\r\n          return { ...state };\r\n        }\r\n        case \"SET_COLOR\": {\r\n          const [index, color] = data;\r\n          state.theme.colors[index].color = color;\r\n          state.saved = false;\r\n          return { ...state };\r\n        }\r\n        case \"SET_COLOR_NAME\": {\r\n          const [index, name] = data;\r\n          state.theme.colors[index].name = name;\r\n          state.saved = false;\r\n          return { ...state };\r\n        }\r\n        case \"SET_COLOR_INCREMENT\": {\r\n          const [index, increment] = data;\r\n          state.theme.colors[index].increment = increment;\r\n          state.saved = false;\r\n          return { ...state };\r\n        }\r\n        case \"SET_COLOR_INDEX\": {\r\n          const [index, indexValue] = data;\r\n          state.theme.colors[index].index = indexValue;\r\n          state.saved = false;\r\n          return { ...state };\r\n        }\r\n        default: {\r\n          throw new Error(`${type} is not a valid action type.`);\r\n        }\r\n      }\r\n    },\r\n    {\r\n      isSavePanelOpen: false,\r\n      editingIndex: -1,\r\n      saved: true,\r\n      saveKey: null,\r\n      theme: {\r\n        name: \"\",\r\n        segmentLength: 9,\r\n        colors: [\r\n          {\r\n            color: \"#0073B8\",\r\n            name: \"primary\",\r\n            increment: 18,\r\n            index: 3,\r\n          },\r\n          {\r\n            color: \"#8B11A8\",\r\n            name: \"secondary\",\r\n            increment: 18,\r\n            index: 3,\r\n          },\r\n          {\r\n            color: \"#888888\",\r\n            name: \"neutral\",\r\n            increment: 18,\r\n            index: 3,\r\n          },\r\n        ],\r\n      },\r\n    }\r\n  );\r\n  const dispatch = (...args) => dispatchRaw(args);\r\n\r\n  console.log({ state, savedThemes });\r\n\r\n  const colorSegments = state.theme.colors.map((color) => {\r\n    return [...new Array(9)].map((_, i) => (i - color.index) * color.increment);\r\n  });\r\n\r\n  const exportText = (() => {\r\n    let s = \"\";\r\n\r\n    state.theme.colors.forEach((color, colorIndex) => {\r\n      colorSegments[colorIndex].forEach((segmentDelta, segmentIndex) => {\r\n        const hex = calculateColor(color.color, segmentDelta);\r\n        s += `--color-${color.name}-${(segmentIndex + 1) * 100}: ${hex};\\n`;\r\n      });\r\n\r\n      s += \"\\n\";\r\n    });\r\n\r\n    return s;\r\n  })();\r\n\r\n  return (\r\n    <PageLayout>\r\n      <h1>Color Theme Generator</h1>\r\n      <TabLayout>\r\n        <Tab>Generator</Tab>\r\n        <TabPanel>\r\n          <HorizontalLayout>\r\n            <div>\r\n              <TextInput\r\n                value={state.theme.name}\r\n                onChange={(e) => dispatch(\"SET_NAME\", [e.target.value])}\r\n                placeholder=\"Color Theme Name\"\r\n              />\r\n            </div>\r\n            <div>{state.saved ? \"Saved\" : \"Unsaved\"}</div>\r\n            <Button onClick={() => dispatch(\"SAVE\")}>Save</Button>\r\n            <Button onClick={() => dispatch(\"TOGGLE_SAVE_PANEL\", [true])}>\r\n              Load Save\r\n            </Button>\r\n          </HorizontalLayout>\r\n          {state.theme.colors.map((color, colorIndex) => (\r\n            <div key={colorIndex}>\r\n              <TextInput\r\n                value={color.name}\r\n                onChange={(e) => dispatch(\"SET_COLOR_NAME\", [e.target.value])}\r\n              />\r\n              <div style={{ height: 10 }} />\r\n              <ColorRow>\r\n                <ColorCellLayout\r\n                  isEditing={state.editingIndex === colorIndex}\r\n                  onClick={() => dispatch(\"SET_EDITING_INDEX\", [colorIndex])}\r\n                >\r\n                  <ColorCell color={color.color} />\r\n                </ColorCellLayout>\r\n                <ColorCellLayout>\r\n                  {colorSegments[colorIndex].map(\r\n                    (segmentDelta, segmentIndex) => (\r\n                      <ColorCell\r\n                        key={segmentIndex}\r\n                        color={calculateColor(color.color, segmentDelta)}\r\n                        isIndex={segmentDelta === 0}\r\n                        isEditing={state.editingIndex === colorIndex}\r\n                        delta={segmentDelta}\r\n                      />\r\n                    )\r\n                  )}\r\n                </ColorCellLayout>\r\n              </ColorRow>\r\n            </div>\r\n          ))}\r\n          {state.isSavePanelOpen && (\r\n            <SlideOutPanel\r\n              onClose={() => dispatch(\"TOGGLE_SAVE_PANEL\", [false])}\r\n            >\r\n              <ThemeLayout>\r\n                {savedThemes.map((save, themeIndex) => (\r\n                  <ThemeOption\r\n                    key={themeIndex}\r\n                    theme={save.theme}\r\n                    onClick={() => dispatch(\"LOAD\", [save.key, save.theme])}\r\n                  />\r\n                ))}\r\n              </ThemeLayout>\r\n            </SlideOutPanel>\r\n          )}\r\n          {state.theme.colors[state.editingIndex] ? (\r\n            <SlideOutPanel\r\n              key={state.editingIndex}\r\n              onClose={() => dispatch(\"SET_EDITING_INDEX\", [-1])}\r\n            >\r\n              <h2>Color Picker</h2>\r\n              <ColorPicker\r\n                color={state.theme.colors[state.editingIndex].color}\r\n                setColor={(newColor) =>\r\n                  dispatch(\"SET_COLOR\", [state.editingIndex, newColor])\r\n                }\r\n              />\r\n              <div style={{ height: 30 }} />\r\n              <NumberInput\r\n                label=\"Value Increment\"\r\n                value={state.theme.colors[state.editingIndex].increment}\r\n                onChange={(value) =>\r\n                  dispatch(\"SET_COLOR_INCREMENT\", [state.editingIndex, value])\r\n                }\r\n                increment={0.5}\r\n                formatter={(n) => `${n}%`}\r\n              />\r\n              <div style={{ height: 30 }} />\r\n              <NumberInput\r\n                label=\"Center Position\"\r\n                value={state.theme.colors[state.editingIndex].index}\r\n                onChange={(value) =>\r\n                  dispatch(\"SET_COLOR_INDEX\", [state.editingIndex, value])\r\n                }\r\n                formatter={(n) => n + 1}\r\n              />\r\n            </SlideOutPanel>\r\n          ) : null}\r\n          <CodeBlock text={exportText} />\r\n        </TabPanel>\r\n\r\n        <Tab>About</Tab>\r\n        <TabPanel>About text will go here.</TabPanel>\r\n      </TabLayout>\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nimport \"normalize.css\";\r\nimport \"./transitions.css\";\r\nimport \"./App.css\";\r\n\r\nimport HomePage from \"../pages/HomePage\";\r\nimport NotificationManager from \"../project/NotificationManager\";\r\n\r\nfunction App() {\r\n  return (\r\n    <NotificationManager>\r\n      <HomePage />\r\n    </NotificationManager>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './project/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}