{"version":3,"sources":["components/ColorRow.jsx","components/ColorCell.jsx","components/ColorCellLayout.jsx","components/ColorCellSmall.jsx","components/SlideOutPanel.jsx","utils/utils.js","components/MarkerContainer.js","components/TextInput.js","components/ColorPicker.js","components/PageLayout.jsx","components/Button.jsx","project/NotificationManager.jsx","components/CodeBlock.jsx","hooks.js","components/NumberInput.jsx","components/ThemeLayout.jsx","utils.js","components/ThemeOption.jsx","components/TabLayout.jsx","components/Tab.jsx","components/TabPanel.jsx","components/VerticalLayout.jsx","components/HorizontalLayout.jsx","components/SidebarLayout.jsx","components/Divider.jsx","components/Badge.jsx","components/RadioInput.jsx","components/ThemeGenerator.jsx","pages/HomePage.jsx","project/App.jsx","serviceWorker.js","index.js"],"names":["StyledContainer","styled","div","ColorRow","props","StyledIndexMarker","isEditing","ColorCell","color","isIndex","delta","textColor","Color","isDark","markerColor","style","backgroundColor","border","onClick","css","StyledEditingMarker","ColorCellLayout","children","rest","ElContainer","ColorCellSmall","StyledBackground","StyledContent","StyledCloseAction","SlideOutPanel","isOpen","onClose","useEffect","listener","e","key","document","addEventListener","removeEventListener","ReactDOM","createPortal","transform","body","clamp","value","min","max","Math","round","lerp","a","b","t","Array","map","i","random","toString","join","MarkerContainer","position","setPosition","width","height","colorPickerRef","useRef","mouseDownRef","mouseUpListener","current","mouseMoveListener","clientX","getBoundingClientRect","left","clientY","top","ref","onMouseDown","target","handleColorSelect","ElInput","input","TextInput","getSelectedColor","state","size","x","markerPosition","y","rgb","pickerColor","array","r","g","hex","getParameters","baseColor","defaultHuePosition","hue","defaultHue","rotate","hueRGB","base","baseSaturated","defaultMarkerPosition","ElColorPickerContainer","ElColorPickerTopRow","ElColorPickerBottomRow","ElColorPickerBackground","ElColorPickerMarker","ElColorPickerHueMarker","ColorPicker","defaultColor","setColor","useReducer","action","type","data","colorInput","test","huePosition","selectedColor","Error","dispatch","p","background","onChange","PageLayout","button","isDisabled","Button","tabIndex","NotificationContext","React","createContext","ElAnchor","ElNotifications","ElNotification","NotificationManager","useState","notification","setNotification","timeout","setTimeout","clearTimeout","contextValue","send","Provider","ElActions","CodeBlock","text","useContext","textArea","createElement","appendChild","focus","select","execCommand","err","console","error","removeChild","ElButton","ElValue","NumberInput","label","increment","formatter","n","ThemeLayout","calculateColor","targetColor","sign","mix","getSavedThemes","log","Object","keys","localStorage","filter","startsWith","replace","theme","JSON","parse","getItem","sort","name","localeCompare","saveTheme","saveKey","setItem","stringify","generateTheme","scheme","withNeutral","h","s","l","hsl","generateRandomColor","colors","push","leftColor","rightColor","complementColor","neutralColor","lightness","true","isActive","ElTitle","ElColors","ElColor","ElActiveIndicator","ThemeOption","colorIndex","_","index","ElTabs","ElTab","selected","ElIndicator","TabLayout","tabContainerRef","indicatorRef","selectedTab","setSelectedTab","components","Children","toArray","tabs","c","displayName","panels","useLayoutEffect","tab","containerRect","tabRect","component","Tab","TabPanel","VerticalLayout","HorizontalLayout","ElContent","ElSidebar","SidebarLayout","leftSidebar","rightSidebar","columns","gridTemplateColumns","Divider","info","success","Badge","ElOption","ElCheckbox","isSelected","RadioInput","options","o","oIndex","schemeOptions","generatorSchema","Joi","object","string","ThemeGenerator","onGeneratorChange","onGenerate","generator","onColorClick","validate","allowUnknown","DEFAULT_COLORS","DEFAULT_STATE","editingIndex","saved","savedThemes","locked","segmentLength","HomePage","oldState","clone","length","indexValue","dispatchRaw","args","colorSegments","exportText","forEach","segmentDelta","segmentIndex","placeholder","save","themeIndex","Fragment","newColor","App","Boolean","window","location","hostname","match","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.38fb5f49.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ColorRow = (props) => {\r\n  return <StyledContainer {...props} />;\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n  display: grid;\r\n  gap: 30px;\r\n  grid-auto-flow: column;\r\n  justify-content: start;\r\n`;\r\n\r\nexport default ColorRow;\r\n","import React from \"react\";\r\nimport Color from \"color\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ColorCell = ({ color, isIndex, isEditing, delta }) => {\r\n  const textColor = Color(color).isDark() ? \"white\" : \"black\";\r\n  const markerColor = Color(color).isDark()\r\n    ? \"var(--color-neutral-700)\"\r\n    : \"var(--color-neutral-200)\";\r\n\r\n  return (\r\n    <StyledContainer style={{ backgroundColor: color }}>\r\n      {isEditing && <span style={{ color: textColor }}>{delta}%</span>}\r\n      {isIndex && (\r\n        <StyledIndexMarker\r\n          isEditing={isEditing}\r\n          style={{\r\n            border: `1px solid ${markerColor}`,\r\n          }}\r\n        />\r\n      )}\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n  position: relative;\r\n  height: 80px;\r\n  width: 80px;\r\n\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledIndexMarker = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  height: ${(props) => (props.isEditing ? 60 : 40)}px;\r\n  width: ${(props) => (props.isEditing ? 60 : 40)}px;\r\n  border-radius: 30px;\r\n\r\n  transition: 0.5s;\r\n`;\r\n\r\nexport default ColorCell;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst ColorCellLayout = ({ children, isEditing, onClick, ...rest }) => {\r\n  return (\r\n    <StyledContainer {...rest} onClick={onClick}>\r\n      {children}\r\n      {isEditing && <StyledEditingMarker />}\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n  position: relative;\r\n\r\n  background-color: var(--color-neutral-600);\r\n  border: 1px solid var(--color-neutral-600);\r\n\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  gap: 1px;\r\n  align-items: center;\r\n  justify-content: start;\r\n  justify-self: start;\r\n\r\n  ${(props) =>\r\n    props.onClick\r\n      ? css`\r\n          cursor: pointer;\r\n\r\n          &:hover {\r\n            border: 1px solid var(--color-neutral-700);\r\n          }\r\n        `\r\n      : \"\"}\r\n`;\r\n\r\nconst StyledEditingMarker = styled.div`\r\n  position: absolute;\r\n  top: -10px;\r\n  left: -10px;\r\n  right: -10px;\r\n  bottom: -10px;\r\n\r\n  border: 1px solid white;\r\n`;\r\n\r\nexport default ColorCellLayout;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ColorCellSmall = (props) => <ElContainer {...props} />;\r\n\r\nconst ElContainer = styled.div`\r\n  height: 30px;\r\n  width: 30px;\r\n  border: 1px solid var(--color-neutral-600);\r\n`;\r\n\r\nexport default ColorCellSmall;\r\n","import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SlideOutPanel = ({ isOpen, onClose, children }) => {\r\n  useEffect(() => {\r\n    const listener = (e) => {\r\n      if (e.key === \"Escape\") {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", listener);\r\n\r\n    return () => document.removeEventListener(\"keydown\", listener);\r\n  }, []); // eslint-disable-line\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      {isOpen && <StyledBackground onClick={() => onClose()} />}\r\n\r\n      <StyledContainer\r\n        style={{ transform: isOpen ? \"translateX(0%)\" : \"translateX(100%)\" }}\r\n      >\r\n        <StyledContent>{children}</StyledContent>\r\n        <StyledCloseAction onClick={() => onClose()}>Close</StyledCloseAction>\r\n      </StyledContainer>\r\n    </>,\r\n    document.body\r\n  );\r\n};\r\n\r\nconst StyledBackground = styled.div`\r\n  position: fixed;\r\n  top: 0px;\r\n  left: 0px;\r\n  bottom: 0px;\r\n  right: 0px;\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n  position: fixed;\r\n  top: 0px;\r\n  right: 0px;\r\n  bottom: 0px;\r\n  width: 600px;\r\n  background-color: var(--color-neutral-400);\r\n  border-left: 1px solid var(--color-neutral-500);\r\n  box-shadow: var(--box-shadow-3);\r\n\r\n  display: grid;\r\n  grid-template-rows: 1fr auto;\r\n  gap: 30px;\r\n\r\n  transition: 0.5s;\r\n`;\r\n\r\nconst StyledContent = styled.div`\r\n  padding: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst StyledCloseAction = styled.div`\r\n  padding: 45px;\r\n  background-color: var(--color-neutral-300);\r\n\r\n  font-size: 20px;\r\n  text-align: center;\r\n\r\n  transition: 0.5s;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: var(--color-neutral-500);\r\n  }\r\n`;\r\n\r\nexport default SlideOutPanel;\r\n","const toPaddedHexString = (num, len) => {\r\n  const str = num.toString(16);\r\n  return \"0\".repeat(len - str.length) + str;\r\n};\r\n\r\nconst numbersToHex = (r, g, b) =>\r\n  `#${toPaddedHexString(r, 2)}${toPaddedHexString(g, 2)}${toPaddedHexString(\r\n    b,\r\n    2\r\n  )}`;\r\n\r\nexport const clamp = (value, min = 0, max = 1) =>\r\n  Math.round(Math.min(Math.max(value, min), max));\r\n\r\nexport const clamp0to255 = value =>\r\n  Math.round(Math.min(Math.max(value, 0), 255));\r\n\r\nexport const lerp = (a, b, t) => a + (b - a) * t;\r\n\r\nexport const RGBToHSL = rgb => {\r\n  // Make r, g, and b fractions of 1\r\n  const r = (rgb.r /= 255);\r\n  const g = (rgb.g /= 255);\r\n  const b = (rgb.b /= 255);\r\n\r\n  // Find greatest and smallest channel values\r\n  let cmin = Math.min(r, g, b);\r\n  let cmax = Math.max(r, g, b);\r\n  let delta = cmax - cmin;\r\n  let h = 0;\r\n  let s = 0;\r\n  let l = 0;\r\n\r\n  // Calculate hue\r\n  // No difference\r\n  if (delta == 0) h = 0;\r\n  // Red is max\r\n  else if (cmax == r) h = ((g - b) / delta) % 6;\r\n  // Green is max\r\n  else if (cmax == g) h = (b - r) / delta + 2;\r\n  // Blue is max\r\n  else h = (r - g) / delta + 4;\r\n\r\n  h = Math.round(h * 60);\r\n\r\n  // Make negative hues positive behind 360°\r\n  if (h < 0) h += 360;\r\n\r\n  // Calculate lightness\r\n  l = (cmax + cmin) / 2;\r\n\r\n  // Calculate saturation\r\n  s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\r\n\r\n  // Multiply l and s by 100\r\n  s = Math.abs(s * 100);\r\n  l = Math.abs(l * 100);\r\n\r\n  return { h, s, l };\r\n};\r\n\r\nexport const HSLToRGB = hsl => {\r\n  // Must be fractions of 1\r\n  const h = hsl.h;\r\n  const s = hsl.s / 100;\r\n  const l = hsl.l / 100;\r\n\r\n  let c = (1 - Math.abs(2 * l - 1)) * s,\r\n    x = c * (1 - Math.abs(((h / 60) % 2) - 1)),\r\n    m = l - c / 2,\r\n    r = 0,\r\n    g = 0,\r\n    b = 0;\r\n\r\n  if (0 <= h && h < 60) {\r\n    r = c;\r\n    g = x;\r\n    b = 0;\r\n  } else if (60 <= h && h < 120) {\r\n    r = x;\r\n    g = c;\r\n    b = 0;\r\n  } else if (120 <= h && h < 180) {\r\n    r = 0;\r\n    g = c;\r\n    b = x;\r\n  } else if (180 <= h && h < 240) {\r\n    r = 0;\r\n    g = x;\r\n    b = c;\r\n  } else if (240 <= h && h < 300) {\r\n    r = x;\r\n    g = 0;\r\n    b = c;\r\n  } else if (300 <= h && h < 360) {\r\n    r = c;\r\n    g = 0;\r\n    b = x;\r\n  }\r\n  r = Math.round((r + m) * 255);\r\n  g = Math.round((g + m) * 255);\r\n  b = Math.round((b + m) * 255);\r\n\r\n  return { r, g, b };\r\n};\r\n\r\nexport const HSLToHex = hsl => {\r\n  const rgb = HSLToRGB(hsl);\r\n\r\n  return RGBToHex(rgb);\r\n};\r\n\r\nexport const getTextDark = color => {\r\n  const rgb = hexToRGB(color);\r\n  return rgb.r * 0.299 + rgb.g * 0.587 + rgb.b * 0.114 > 186;\r\n};\r\n\r\nexport const hexToRGB = hex => {\r\n  const r = parseInt(hex.slice(1, 3), 16);\r\n  const g = parseInt(hex.slice(3, 5), 16);\r\n  const b = parseInt(hex.slice(5, 7), 16);\r\n\r\n  return { r, g, b };\r\n};\r\n\r\nexport const hexToHSL = hex => {\r\n  const rgb = hexToRGB(hex);\r\n  return RGBToHSL(rgb);\r\n};\r\n\r\nexport const RGBToHex = rgb => numbersToHex(rgb.r, rgb.g, rgb.b);\r\n\r\nexport const generateHue = (color, gain) => {\r\n  const r0 = color.rgb.r;\r\n  const g0 = color.rgb.g;\r\n  const b0 = color.rgb.b;\r\n\r\n  const mult = Math.abs(gain / 100);\r\n  const target = gain > 0 ? 255 : 0;\r\n\r\n  const r = clamp0to255(lerp(r0, target, mult));\r\n  const g = clamp0to255(lerp(g0, target, mult));\r\n  const b = clamp0to255(lerp(b0, target, mult));\r\n\r\n  return RGBToHex({ r, g, b });\r\n};\r\n\r\nexport const combineRGB = (tarhexToRGB, addedRGB, strength) => {\r\n  const totalAdd = addedRGB.r + addedRGB.g + addedRGB.b;\r\n  const averageAdd = clamp0to255((totalAdd / 3) * strength);\r\n  const r = clamp0to255(tarhexToRGB.r + addedRGB.r * strength - averageAdd);\r\n  const g = clamp0to255(tarhexToRGB.g + addedRGB.g * strength - averageAdd);\r\n  const b = clamp0to255(tarhexToRGB.b + addedRGB.b * strength - averageAdd);\r\n\r\n  return numbersToHex(r, g, b);\r\n};\r\n\r\nexport const generateRandomString = [...Array(10)]\r\n  .map(i => (~~(Math.random() * 36)).toString(36))\r\n  .join(\"\");\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { clamp } from \"../utils/utils\";\r\n\r\nconst MarkerContainer = ({\r\n  position,\r\n  setPosition,\r\n  width = 100,\r\n  height = 100,\r\n  style,\r\n  ...rest\r\n}) => {\r\n  const colorPickerRef = useRef();\r\n  const mouseDownRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    const mouseUpListener = () => (mouseDownRef.current = false);\r\n    const mouseMoveListener = e => {\r\n      if (mouseDownRef.current) {\r\n        setPosition([\r\n          clamp(\r\n            e.clientX - colorPickerRef.current.getBoundingClientRect().left,\r\n            0,\r\n            width\r\n          ),\r\n          clamp(\r\n            e.clientY - colorPickerRef.current.getBoundingClientRect().top,\r\n            0,\r\n            height\r\n          )\r\n        ]);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mouseup\", mouseUpListener);\r\n    document.addEventListener(\"mousemove\", mouseMoveListener);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mouseup\", mouseUpListener);\r\n      document.removeEventListener(\"mousemove\", mouseMoveListener);\r\n    };\r\n  }, [width, height, setPosition]);\r\n\r\n  const handleColorSelect = e => {\r\n    if (mouseDownRef.current) {\r\n      setPosition([\r\n        e.clientX - e.target.getBoundingClientRect().left,\r\n        e.clientY - e.target.getBoundingClientRect().top\r\n      ]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ElContainer\r\n      {...rest}\r\n      ref={colorPickerRef}\r\n      onMouseDown={e => {\r\n        mouseDownRef.current = true;\r\n        handleColorSelect(e);\r\n      }}\r\n      style={{\r\n        ...style,\r\n        width,\r\n        height\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst ElContainer = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport default MarkerContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TextInput = ({ value, ...rest }) => {\r\n  return <ElInput value={value || \"\"} {...rest} />;\r\n};\r\n\r\nconst ElInput = styled.input`\r\n  border: 1px solid var(--color-neutral-500);\r\n  background-color: var(--color-neutral-300);\r\n  padding: 0px 15px;\r\n  height: 30px;\r\n\r\n  color: white;\r\n  line-height: 28px;\r\n\r\n  &::placeholder {\r\n    color: var(--color-neutral-500);\r\n  }\r\n`;\r\n\r\nexport default TextInput;\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport color from \"color\";\r\nimport MarkerContainer from \"./MarkerContainer\";\r\nimport TextInput from \"./TextInput\";\r\nimport { lerp } from \"../utils/utils\";\r\n\r\nconst ColorPicker = ({ color: defaultColor = \"#ff0000\", setColor }) => {\r\n  const size = 400;\r\n  const sizeHue = 60;\r\n\r\n  const [state, dispatch] = useReducer(\r\n    (state, action) => {\r\n      const [type, data] = action;\r\n\r\n      switch (type) {\r\n        case \"COLOR_INPUT\": {\r\n          state.colorInput = data;\r\n\r\n          if (/^#[0-9a-f]{6}$/i.test(state.colorInput)) {\r\n            const {\r\n              defaultHuePosition,\r\n              defaultHue,\r\n              defaultMarkerPosition,\r\n            } = getParameters(state.colorInput, size);\r\n\r\n            state.pickerColor = defaultHue;\r\n            state.huePosition = defaultHuePosition;\r\n            state.markerPosition = defaultMarkerPosition;\r\n            state.selectedColor = getSelectedColor(state, size);\r\n          }\r\n\r\n          return { ...state };\r\n        }\r\n        case \"SET_MARKER_POSITION\": {\r\n          state.markerPosition = data;\r\n          state.selectedColor = getSelectedColor(state, size);\r\n          state.colorInput = state.selectedColor;\r\n\r\n          return { ...state };\r\n        }\r\n        case \"SET_HUE_POSITION\": {\r\n          const hue = color(\"#ff0000\")\r\n            .rotate((data[1] / size) * 360)\r\n            .hex();\r\n\r\n          state.huePosition = data;\r\n          state.pickerColor = hue;\r\n          state.selectedColor = getSelectedColor(state, size);\r\n          state.colorInput = state.selectedColor;\r\n\r\n          return { ...state };\r\n        }\r\n        default: {\r\n          throw new Error(`${type} is not a supported action.`);\r\n        }\r\n      }\r\n    },\r\n    null,\r\n    () => {\r\n      const {\r\n        defaultHuePosition,\r\n        defaultHue,\r\n        defaultMarkerPosition,\r\n      } = getParameters(defaultColor, size);\r\n\r\n      return {\r\n        selectedColor: defaultColor,\r\n        colorInput: defaultColor,\r\n        pickerColor: defaultHue,\r\n        markerPosition: defaultMarkerPosition,\r\n        huePosition: [0, defaultHuePosition],\r\n      };\r\n    }\r\n  );\r\n\r\n  const {\r\n    selectedColor,\r\n    colorInput,\r\n    pickerColor,\r\n    markerPosition,\r\n    huePosition,\r\n  } = state;\r\n\r\n  // Propagate any changes to the parent\r\n  useEffect(() => {\r\n    if (defaultColor !== selectedColor) {\r\n      setColor(selectedColor);\r\n    }\r\n  }, [selectedColor]); // eslint-disable-line\r\n\r\n  return (\r\n    <ElColorPickerContainer>\r\n      <ElColorPickerTopRow>\r\n        <MarkerContainer\r\n          position={markerPosition}\r\n          setPosition={(p) => dispatch([\"SET_MARKER_POSITION\", p])}\r\n          width={size}\r\n          height={size}\r\n          style={{\r\n            backgroundColor: color(pickerColor),\r\n          }}\r\n        >\r\n          <ElColorPickerBackground\r\n            style={{\r\n              background: `linear-gradient(to left, transparent, white)`,\r\n            }}\r\n          />\r\n          <ElColorPickerBackground\r\n            style={{\r\n              background: \"linear-gradient(to top, black, transparent)\",\r\n            }}\r\n          />\r\n          <ElColorPickerMarker\r\n            style={{\r\n              left: `${markerPosition[0] / 4}%`,\r\n              top: `${markerPosition[1] / 4}%`,\r\n              backgroundColor: selectedColor,\r\n            }}\r\n          />\r\n        </MarkerContainer>\r\n        <MarkerContainer\r\n          position={huePosition}\r\n          setPosition={(p) => {\r\n            dispatch([\"SET_HUE_POSITION\", p]);\r\n          }}\r\n          width={sizeHue}\r\n          height={size}\r\n          style={{\r\n            background:\r\n              \"linear-gradient(to bottom, #ff0000, #ffff00, #00ff00, #00ffff, #0000ff, #ff00ff, #ff0000)\",\r\n          }}\r\n        >\r\n          <ElColorPickerHueMarker style={{ top: `${huePosition[1] / 4}%` }} />\r\n        </MarkerContainer>\r\n      </ElColorPickerTopRow>\r\n      <ElColorPickerBottomRow>\r\n        <div>\r\n          <TextInput\r\n            value={colorInput}\r\n            onChange={(e) => dispatch([\"COLOR_INPUT\", e.target.value])}\r\n          />\r\n        </div>\r\n      </ElColorPickerBottomRow>\r\n    </ElColorPickerContainer>\r\n  );\r\n};\r\n\r\nconst getSelectedColor = (state, size) => {\r\n  const x = state.markerPosition[0] / size;\r\n  const y = state.markerPosition[1] / size;\r\n\r\n  const rgb = color(state.pickerColor).rgb().array();\r\n  const r = lerp(lerp(255, rgb[0], x), 0, y);\r\n  const g = lerp(lerp(255, rgb[1], x), 0, y);\r\n  const b = lerp(lerp(255, rgb[2], x), 0, y);\r\n  const selectedColor = color([r, g, b]).hex();\r\n\r\n  return selectedColor;\r\n};\r\n\r\nconst getParameters = (baseColor, size) => {\r\n  const defaultHuePosition = (color(baseColor).hue() / 360) * size;\r\n  const defaultHue = color(\"#ff0000\")\r\n    .rotate((defaultHuePosition / size) * 360)\r\n    .hex();\r\n\r\n  const hueRGB = color(defaultHue).rgb().array();\r\n  const base = color(baseColor).rgb().array();\r\n  const max = Math.max(...base);\r\n  const y = size - (max / 255) * size;\r\n  const baseSaturated = base.map((x) => (x * 255) / max);\r\n\r\n  const toWhite =\r\n    baseSaturated[0] !== 255\r\n      ? (baseSaturated[0] - hueRGB[0]) / (255 - hueRGB[0])\r\n      : baseSaturated[1] !== 255\r\n      ? (baseSaturated[1] - hueRGB[1]) / (255 - hueRGB[1])\r\n      : (baseSaturated[2] - hueRGB[2]) / (255 - hueRGB[2]);\r\n\r\n  const x = size - toWhite * size;\r\n\r\n  return {\r\n    defaultHuePosition,\r\n    defaultHue,\r\n    defaultMarkerPosition: [x, y],\r\n  };\r\n};\r\n\r\nconst ElColorPickerContainer = styled.div`\r\n  display: grid;\r\n  grid-gap: 15px;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst ElColorPickerTopRow = styled.div`\r\n  display: grid;\r\n  grid-gap: 30px;\r\n  grid-auto-flow: column;\r\n  align-items: flex-start;\r\n  justify-items: flex-start;\r\n`;\r\n\r\nconst ElColorPickerBottomRow = styled.div`\r\n  display: grid;\r\n  grid-gap: 30px;\r\n  grid-auto-flow: column;\r\n`;\r\n\r\nconst ElColorPickerBackground = styled.div`\r\n  position: absolute;\r\n  top: 0%;\r\n  left: 0%;\r\n  bottom: 0%;\r\n  right: 0%;\r\n\r\n  pointer-events: none;\r\n`;\r\n\r\nconst ElColorPickerMarker = styled.div`\r\n  position: absolute;\r\n  height: 16px;\r\n  width: 16px;\r\n  transform: translateX(-50%) translateY(-50%);\r\n  border: 2px solid white;\r\n  background-color: transparent;\r\n  border-radius: 10px;\r\n\r\n  pointer-events: none;\r\n`;\r\n\r\nconst ElColorPickerHueMarker = styled.div`\r\n  position: absolute;\r\n  width: calc(100% + 10px);\r\n  height: 2px;\r\n  transform: translateX(-5px) translateY(-1px);\r\n  background-color: white;\r\n`;\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\"\r\n\r\nconst PageLayout = ({ children }) => {\r\n  return <StyledContainer>\r\n    {children}\r\n  </StyledContainer>\r\n}\r\n\r\nconst StyledContainer = styled.div`\r\n  padding: 30px;\r\n\r\n  display: grid;\r\n  gap: 30px;\r\n`\r\n\r\nexport default PageLayout;","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst Button = ({ isDisabled = false, onClick, ...props }) => (\r\n  <ElContainer\r\n    isDisabled={isDisabled}\r\n    onClick={isDisabled ? () => null : onClick}\r\n    tabIndex=\"0\"\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst ElContainer = styled.button`\r\n  height: 30px;\r\n  padding: 0px 15px;\r\n  border: 1px solid var(--color-neutral-500);\r\n  background-color: var(--color-neutral-300);\r\n\r\n  font-family: Roboto, Arial, sans-serif;\r\n  color: white;\r\n  text-align: center;\r\n  line-height: 30px;\r\n\r\n  transition: 0.25s;\r\n\r\n  cursor: pointer;\r\n\r\n  user-select: none;\r\n\r\n  &:hover {\r\n    background-color: var(--color-neutral-400);\r\n  }\r\n\r\n  ${(props) =>\r\n    props.isDisabled &&\r\n    css`\r\n      background-color: var(--color-neutral-400);\r\n      border-color: var(--color-neutral-500);\r\n      color: var(--color-neutral-600);\r\n\r\n      cursor: not-allowed;\r\n    `}\r\n`;\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const NotificationContext = React.createContext();\r\n\r\nconst NotificationManager = ({ children }) => {\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setNotification(null);\r\n    }, 5000);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [notification]);\r\n\r\n  const contextValue = useRef({\r\n    send: setNotification,\r\n  });\r\n\r\n  return (\r\n    <NotificationContext.Provider value={contextValue.current}>\r\n      {ReactDOM.createPortal(\r\n        <ElAnchor>\r\n          <ElNotifications>\r\n            {notification && (\r\n              <ElNotification key={notification}>{notification}</ElNotification>\r\n            )}\r\n          </ElNotifications>\r\n        </ElAnchor>,\r\n        document.body\r\n      )}\r\n      {children}\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n\r\nconst ElAnchor = styled.div`\r\n  position: fixed;\r\n  top: 0px;\r\n  left: 0px;\r\n  right: 0px;\r\n  bottom: 0px;\r\n  padding: 30px;\r\n\r\n  pointer-events: none;\r\n`;\r\n\r\nconst ElNotifications = styled.div`\r\n  display: grid;\r\n  justify-content: center;\r\n  align-content: flex-start;\r\n`;\r\n\r\nconst ElNotification = styled.div`\r\n  padding: 15px 30px;\r\n  background-color: var(--color-neutral-500);\r\n  border: 1px solid var(--color-neutral-600);\r\n  border-radius: 5px;\r\n\r\n  color: white;\r\n  text-align: center;\r\n`;\r\n\r\nexport default NotificationManager;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../components/Button\";\r\nimport { useNotificationContext } from \"../hooks\";\r\n\r\nconst CodeBlock = ({ text }) => {\r\n  const notification = useNotificationContext();\r\n\r\n  return (\r\n    <ElContainer>\r\n      {text}\r\n      <ElActions>\r\n        <Button\r\n          onClick={() => {\r\n            var textArea = document.createElement(\"textarea\");\r\n            textArea.value = text;\r\n\r\n            // Avoid scrolling to bottom\r\n            textArea.style.top = \"0\";\r\n            textArea.style.left = \"0\";\r\n            textArea.style.position = \"fixed\";\r\n\r\n            document.body.appendChild(textArea);\r\n            textArea.focus();\r\n            textArea.select();\r\n\r\n            try {\r\n              var successful = document.execCommand(\"copy\");\r\n\r\n              if (successful) {\r\n                notification.send(\"Copied to Clipboard!\");\r\n              } else {\r\n                notification.send(\"Failed to Copy to Clipboard\");\r\n              }\r\n            } catch (err) {\r\n              console.error(\"Unable to copy\", err);\r\n\r\n              notification.send(\"Failed to Copy to Clipboard\");\r\n            }\r\n\r\n            document.body.removeChild(textArea);\r\n          }}\r\n        >\r\n          Copy to Clipboard\r\n        </Button>\r\n      </ElActions>\r\n    </ElContainer>\r\n  );\r\n};\r\n\r\nconst ElContainer = styled.div`\r\n  position: relative;\r\n  background-color: var(--color-neutral-300);\r\n  border: 1px solid var(--color-neutral-500);\r\n  padding: 30px;\r\n  max-width: 800px;\r\n\r\n  font-family: \"Roboto Mono\", monospace;\r\n  white-space: pre-line;\r\n`;\r\n\r\nconst ElActions = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n  right: 30px;\r\n\r\n  display: grid;\r\n  gap: 30px;\r\n  justify-items: end;\r\n`;\r\n\r\nexport default CodeBlock;\r\n","import { useMediaQuery } from \"react-responsive\";\r\nimport { NotificationContext } from \"./project/NotificationManager\";\r\nimport { useContext } from \"react\";\r\n\r\nconst MEDIA_QUERY_SIZES = {\r\n  small: 500,\r\n  medium: 750,\r\n  large: 1150,\r\n};\r\n\r\nexport const useResponsive = (size) => {\r\n  const query = MEDIA_QUERY_SIZES[size];\r\n\r\n  if (!query) {\r\n    throw new Error(`size \"${size}\" is not a valid size`);\r\n  }\r\n\r\n  return useMediaQuery({ query });\r\n};\r\n\r\nexport const useNotificationContext = () => useContext(NotificationContext);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NumberInput = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  increment = 1,\r\n  formatter = (n) => n,\r\n}) => {\r\n  return (\r\n    <ElContainer>\r\n      <div>{label}</div>\r\n      <ElButton onClick={() => onChange(value - increment)}>–</ElButton>\r\n      <ElValue>{formatter(value)}</ElValue>\r\n      <ElButton onClick={() => onChange(value + increment)}>+</ElButton>\r\n    </ElContainer>\r\n  );\r\n};\r\n\r\nconst ElContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 50px 80px 50px;\r\n  align-items: center;\r\n  gap: 15px;\r\n`;\r\n\r\nconst ElButton = styled.button`\r\n  border: 1px solid var(--color-neutral-500);\r\n  background-color: var(--color-neutral-300);\r\n  height: 30px;\r\n\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n\r\n  font-size: 24px;\r\n  color: var(--color-neutral-700);\r\n\r\n  cursor: pointer;\r\n\r\n  user-select: none;\r\n\r\n  &:hover {\r\n    border: 1px solid var(--color-neutral-700);\r\n    color: white;\r\n  }\r\n\r\n  &:focus {\r\n    border: 1px solid var(--color-primary-500);\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst ElValue = styled.div`\r\n  border: 1px solid var(--color-neutral-500);\r\n  background-color: var(--color-neutral-300);\r\n  height: 30px;\r\n\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n`;\r\n\r\nexport default NumberInput;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ThemeLayout = (props) => <ElContainer {...props} />;\r\n\r\nconst ElContainer = styled.div`\r\n  display: grid;\r\n  gap: 30px;\r\n`;\r\n\r\nexport default ThemeLayout;\r\n","import Color from \"color\";\r\n\r\nexport const calculateColor = (base, delta) => {\r\n  const baseColor = Color(base);\r\n  const targetColor = Color(delta > 0 ? \"white\" : \"black\");\r\n  const sign = Math.sign(delta);\r\n  const newColor = baseColor.mix(targetColor, (sign * delta) / 100);\r\n  return newColor.hex();\r\n};\r\n\r\nexport const generateRandomString = () =>\r\n  [...Array(10)].map((i) => (~~(Math.random() * 36)).toString(36)).join(\"\");\r\n\r\nexport const getSavedThemes = () => {\r\n  console.log(\"GETTING SAVED THEMES\");\r\n\r\n  const keys = [...Object.keys(localStorage)];\r\n  const themes = keys\r\n    .filter((key) => key.startsWith(\"COLOR-THEME:\"))\r\n    .map((key) => ({\r\n      key: key.replace(\"COLOR-THEME:\", \"\"),\r\n      theme: JSON.parse(localStorage.getItem(key)),\r\n    }))\r\n    .sort((a, b) =>\r\n      (a.theme.name || \"Untitled Theme\").localeCompare(\r\n        b.theme.name || \"Untitled Theme\"\r\n      )\r\n    );\r\n\r\n  return themes;\r\n};\r\n\r\nexport const saveTheme = (theme, saveKey) => {\r\n  // Saves a theme to localStorage.\r\n  // If given a key, it will save the theme using the key. Otherwise, a new key will be generated.\r\n  // Returns the save key.\r\n\r\n  const key = saveKey || generateRandomString();\r\n\r\n  localStorage.setItem(`COLOR-THEME:${key}`, JSON.stringify(theme));\r\n\r\n  return key;\r\n};\r\n\r\nexport const generateRandomColor = () => {\r\n  const h = Math.random() * 360;\r\n  const s = 15 + Math.random() * 85;\r\n  const l = 15 + Math.random() * 70;\r\n\r\n  return Color.hsl(h, s, l);\r\n};\r\n\r\nexport const generateTheme = (scheme, withNeutral) => {\r\n  const color = generateRandomColor();\r\n  const colors = [];\r\n\r\n  if (scheme === \"monochromatic\") {\r\n    colors.push(color.hex());\r\n  } else if (scheme === \"analogous\") {\r\n    const leftColor = color.hue(color.hue() - 30);\r\n    const rightColor = color.hue(color.hue() + 30);\r\n    colors.push(leftColor.hex());\r\n    colors.push(color.hex());\r\n    colors.push(rightColor.hex());\r\n  } else if (scheme === \"complementary\") {\r\n    const complementColor = color.hue(color.hue() + 180);\r\n    colors.push(color.hex());\r\n    colors.push(complementColor.hex());\r\n  } else if (scheme === \"split-complementary\") {\r\n    const complementColor = color.hue(color.hue() + 180);\r\n    const leftColor = complementColor.hue(complementColor.hue() - 30);\r\n    const rightColor = complementColor.hue(complementColor.hue() + 30);\r\n    colors.push(leftColor.hex());\r\n    colors.push(color.hex());\r\n    colors.push(rightColor.hex());\r\n  } else if (scheme === \"tetradic\") {\r\n  }\r\n\r\n  if (withNeutral) {\r\n    const neutralColor = Color().hsl(0, 0, color.lightness());\r\n    colors.push(neutralColor.hex());\r\n  }\r\n\r\n  return colors;\r\n};\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { calculateColor } from \"../utils\";\r\n\r\nconst ThemeOption = ({ theme, isActive, ...rest }) => {\r\n  return (\r\n    <ElContainer isActive={isActive} {...rest}>\r\n      <ElTitle>{theme.name || \"Untitled Theme\"}</ElTitle>\r\n      <ElColors>\r\n        {theme.colors.map((color, colorIndex) => (\r\n          <ElColor style={{ backgroundColor: color.color }} key={colorIndex}>\r\n            {[...new Array(9)].map((_, i) => {\r\n              const delta = (i - color.index) * color.increment;\r\n              return (\r\n                <div\r\n                  key={i}\r\n                  style={{\r\n                    backgroundColor: calculateColor(color.color, delta),\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          </ElColor>\r\n        ))}\r\n      </ElColors>\r\n      {isActive && <ElActiveIndicator />}\r\n    </ElContainer>\r\n  );\r\n};\r\n\r\nconst ElContainer = styled.div`\r\n  position: relative;\r\n\r\n  color: var(--color-neutral-700);\r\n\r\n  cursor: pointer;\r\n\r\n  transition: 0.25s;\r\n\r\n  &:hover {\r\n    color: white;\r\n  }\r\n\r\n  /* ${(props) =>\r\n    ({\r\n      true: css`\r\n        background-color: white;\r\n      `,\r\n    }[props.isActive])} */\r\n`;\r\n\r\nconst ElTitle = styled.div`\r\n  height: 30px;\r\n`;\r\n\r\nconst ElColors = styled.div`\r\n  height: 120px;\r\n  border: 1px solid var(--color-neutral-600);\r\n  background-color: var(--color-neutral-600);\r\n\r\n  display: grid;\r\n  gap: 1px;\r\n  grid-auto-columns: 1fr;\r\n\r\n  transition: 0.25s;\r\n\r\n  ${ElContainer}:hover & {\r\n    border: 1px solid white;\r\n  }\r\n`;\r\n\r\nconst ElColor = styled.div`\r\n  background-color: var(--color-neutral-600);\r\n  padding-left: 100px;\r\n\r\n  display: grid;\r\n  gap: 1px;\r\n  grid-auto-flow: column;\r\n  grid-auto-columns: 1fr;\r\n`;\r\n\r\nconst ElActiveIndicator = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n  left: -20px;\r\n  /* transform: translateY(-50%); */\r\n\r\n  border-right: 15px solid var(--color-neutral-700);\r\n  border-top: 60px solid transparent;\r\n  border-bottom: 60px solid transparent;\r\n`;\r\n\r\nexport default ThemeOption;\r\n","import React, { useState, useRef, useLayoutEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TabLayout = ({ children }) => {\r\n  const tabContainerRef = useRef();\r\n  const indicatorRef = useRef();\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n\r\n  const components = React.Children.toArray(children);\r\n  const tabs = components.filter((c) => c.type?.displayName === \"Tab\");\r\n  const panels = components.filter((c) => c.type?.displayName === \"TabPanel\");\r\n\r\n  useLayoutEffect(() => {\r\n    const tab = tabContainerRef.current.children[selectedTab];\r\n\r\n    if (tab) {\r\n      const containerRect = tabContainerRef.current.getBoundingClientRect();\r\n      const tabRect = tab.getBoundingClientRect();\r\n\r\n      indicatorRef.current.style.left =\r\n        tabRect.left - containerRect.left + \"px\";\r\n      indicatorRef.current.style.width = tabRect.width + \"px\";\r\n    }\r\n  }, [selectedTab]);\r\n\r\n  return (\r\n    <ElContainer>\r\n      <ElTabs ref={tabContainerRef}>\r\n        {tabs.map((component, index) => (\r\n          <ElTab\r\n            key={index}\r\n            {...component.props}\r\n            selected={index === selectedTab}\r\n            onClick={() => setSelectedTab(index)}\r\n          />\r\n        ))}\r\n        <ElIndicator ref={indicatorRef} style={{ width: tabs[selectedTab] }} />\r\n      </ElTabs>\r\n      <div>{panels[selectedTab]}</div>\r\n    </ElContainer>\r\n  );\r\n};\r\n\r\nconst ElContainer = styled.div`\r\n  display: grid;\r\n  gap: 30px;\r\n`;\r\n\r\nconst ElTabs = styled.div`\r\n  position: relative;\r\n  height: 30px;\r\n  border-bottom: 2px solid var(--color-neutral-500);\r\n\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  grid-gap: 30px;\r\n  justify-content: start;\r\n  align-items: center;\r\n`;\r\n\r\nconst ElTab = styled.div`\r\n  position: relative;\r\n  height: 30px;\r\n\r\n  display: grid;\r\n  align-items: center;\r\n\r\n  color: ${(props) => (props.selected ? \"white\" : \"var(--color-neutral-700)\")};\r\n\r\n  cursor: pointer;\r\n\r\n  transition: 0.25s;\r\n\r\n  &:hover {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst ElIndicator = styled.div`\r\n  position: absolute;\r\n  bottom: -2px;\r\n  height: 2px;\r\n  background-color: var(--color-primary-600);\r\n  box-shadow: 0px 0px 2px var(--color-primary-600);\r\n\r\n  transition: 0.5s;\r\n`;\r\n\r\nexport default TabLayout;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Tab = ({ children }) => {\r\n  return <ElContainer>{children}</ElContainer>;\r\n};\r\n\r\nTab.displayName = \"Tab\";\r\n\r\nconst ElContainer = styled.div`\r\n  position: relative;\r\n  height: 30px;\r\n\r\n  display: grid;\r\n  align-items: center;\r\n`;\r\n\r\nexport default Tab;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TabPanel = (props) => <ElContainer {...props} />;\r\n\r\nTabPanel.displayName = \"TabPanel\";\r\n\r\nconst ElContainer = styled.div`\r\n  display: grid;\r\n  gap: 30px;\r\n`;\r\n\r\nexport default TabPanel;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst VerticalLayout = (props) => <ElContainer {...props} />;\r\n\r\nconst ElContainer = styled.div`\r\n  display: grid;\r\n  grid-gap: 15px;\r\n  align-content: flex-start;\r\n`;\r\n\r\nexport default VerticalLayout;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HorizontalLayout = (props) => <ElContainer {...props} />;\r\n\r\nconst ElContainer = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  gap: 15px;\r\n  align-items: center;\r\n  justify-content: start;\r\n`;\r\n\r\nexport default HorizontalLayout;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SidebarLayout = ({ leftSidebar, rightSidebar, children }) => {\r\n  const columns =\r\n    (leftSidebar ? \"auto \" : \"\") +\r\n    \"minmax(0, 1fr)\" +\r\n    (rightSidebar ? \" auto\" : \"\");\r\n\r\n  return (\r\n    <ElContainer style={{ gridTemplateColumns: columns }}>\r\n      {leftSidebar && <ElSidebar>{leftSidebar}</ElSidebar>}\r\n      <ElContent>{children}</ElContent>\r\n      {rightSidebar && <ElSidebar>{rightSidebar}</ElSidebar>}\r\n    </ElContainer>\r\n  );\r\n};\r\n\r\nconst ElContainer = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  gap: 30px;\r\n`;\r\n\r\nconst ElContent = styled.div`\r\n  display: grid;\r\n  align-content: start;\r\n  gap: 30px;\r\n`;\r\n\r\nconst ElSidebar = styled.div`\r\n  width: 240px;\r\n\r\n  display: grid;\r\n  align-content: start;\r\n  gap: 30px;\r\n`;\r\n\r\nexport default SidebarLayout;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Divider = (props) => <ElContainer {...props} />;\r\n\r\nconst ElContainer = styled.div`\r\n  border-bottom: 1px solid var(--color-neutral-600);\r\n`;\r\n\r\nexport default Divider;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst Badge = ({ info = false, success = false, error = false, ...props }) => (\r\n  <ElContainer info={info} success={success} error={error} {...props} />\r\n);\r\n\r\nconst ElContainer = styled.div`\r\n  display: inline-block;\r\n  padding: 4px 15px;\r\n  border: 1px solid var(--color-neutral-500);\r\n  border-radius: 3px;\r\n\r\n  font-size: 0.85rem;\r\n\r\n  ${(props) =>\r\n    props.info &&\r\n    css`\r\n      border-color: var(--color-primary-600);\r\n      background-color: var(--color-primary-100);\r\n      color: var(--color-primary-600);\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.success &&\r\n    css`\r\n      border-color: var(--color-success-400);\r\n      background-color: var(--color-success-100);\r\n      color: var(--color-success-400);\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.error &&\r\n    css`\r\n      border-color: var(--color-error-600);\r\n      background-color: var(--color-error-100);\r\n      color: var(--color-error-600);\r\n    `}\r\n`;\r\n\r\nexport default Badge;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst RadioInput = ({ value, onChange, options = [] }) => {\r\n  return (\r\n    <ElContainer>\r\n      {options.map((o, oIndex) => (\r\n        <ElOption key={oIndex} onClick={() => onChange(o.value)}>\r\n          <ElCheckbox isSelected={value === o.value} />\r\n          <div>{o.label}</div>\r\n        </ElOption>\r\n      ))}\r\n    </ElContainer>\r\n  );\r\n};\r\n\r\nconst ElContainer = styled.div`\r\n  display: grid;\r\n  gap: 10px;\r\n  align-content: flex-start;\r\n  justify-items: start;\r\n`;\r\n\r\nconst ElOption = styled.div`\r\n  display: grid;\r\n  gap: 10px;\r\n  grid-template-columns: auto auto 1fr;\r\n  align-items: center;\r\n\r\n  color: var(--color-neutral-800);\r\n\r\n  cursor: pointer;\r\n\r\n  transition: 0.25s;\r\n\r\n  &:hover {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst ElCheckbox = styled.div`\r\n  border: 1px solid var(--color-neutral-500);\r\n  height: 20px;\r\n  width: 20px;\r\n\r\n  transition: 0.25s;\r\n\r\n  ${(props) =>\r\n    props.isSelected &&\r\n    css`\r\n      background-color: var(--color-primary);\r\n    `}\r\n\r\n  ${ElOption}:hover & {\r\n    border-color: white;\r\n  }\r\n`;\r\n\r\nexport default RadioInput;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Color from \"color\";\r\nimport Joi from \"@hapi/joi\";\r\nimport Button from \"../components/Button\";\r\nimport VerticalLayout from \"../components/VerticalLayout\";\r\nimport RadioInput from \"../components/RadioInput\";\r\nimport { generateTheme } from \"../utils\";\r\n\r\nconst schemeOptions = [\r\n  { label: \"Monochromatic\", value: \"monochromatic\" },\r\n  { label: \"Analogous\", value: \"analogous\" },\r\n  { label: \"Complementary\", value: \"complementary\" },\r\n  { label: \"Split Complementary\", value: \"split-complementary\" },\r\n  { label: \"Tetradic\", value: \"tetradic\" },\r\n];\r\n\r\nconst generatorSchema = Joi.object({\r\n  scheme: Joi.string(),\r\n});\r\n\r\nconst ThemeGenerator = ({\r\n  theme,\r\n  onGeneratorChange,\r\n  onGenerate,\r\n  onColorClick,\r\n}) => {\r\n  const { value: generator } = generatorSchema.validate(theme.generator || {}, {\r\n    allowUnknown: false,\r\n  });\r\n\r\n  return (\r\n    <ElContainer>\r\n      <VerticalLayout>\r\n        <RadioInput\r\n          value={generator.scheme}\r\n          onChange={(scheme) => onGeneratorChange({ ...generator, scheme })}\r\n          options={schemeOptions}\r\n        />\r\n\r\n        {/* <div>\r\n          <Badge info>\r\n            {schemeOptions.find((o) => o.value === generator.scheme)?.label}\r\n          </Badge>\r\n        </div> */}\r\n\r\n        <div>\r\n          <Button\r\n            onClick={() => {\r\n              const colors = generateTheme(generator.scheme, true);\r\n\r\n              onGenerate(colors);\r\n            }}\r\n          >\r\n            Generate\r\n          </Button>\r\n        </div>\r\n\r\n        <ElColors>\r\n          {theme.colors.map((color, colorIndex) => {\r\n            const isDark = Color(color.color).isDark();\r\n\r\n            return (\r\n              <ElColor\r\n                key={colorIndex}\r\n                style={{\r\n                  backgroundColor: color.color,\r\n                  color: isDark ? \"white\" : \"black\",\r\n                }}\r\n              >\r\n                {color.color}\r\n              </ElColor>\r\n            );\r\n          })}\r\n        </ElColors>\r\n      </VerticalLayout>\r\n    </ElContainer>\r\n  );\r\n};\r\n\r\nconst ElContainer = styled.div`\r\n  /* display: grid;\r\n  padding: 30px; */\r\n  /* border: 1px solid var(--color-neutral-500); */\r\n`;\r\n\r\nconst ElColors = styled.div`\r\n  border: 1px solid var(--color-neutral-600);\r\n  background-color: var(--color-neutral-600);\r\n\r\n  display: grid;\r\n  gap: 1px;\r\n  grid-auto-flow: column;\r\n  grid-auto-columns: 1fr;\r\n`;\r\n\r\nconst ElColor = styled.div`\r\n  height: 120px;\r\n\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n`;\r\n\r\nexport default ThemeGenerator;\r\n","import React, { useReducer } from \"react\";\r\nimport clone from \"clone\";\r\nimport ColorRow from \"../components/ColorRow\";\r\nimport ColorCell from \"../components/ColorCell\";\r\nimport ColorCellLayout from \"../components/ColorCellLayout\";\r\nimport ColorCellSmall from \"../components/ColorCellSmall\";\r\nimport SlideOutPanel from \"../components/SlideOutPanel\";\r\nimport ColorPicker from \"../components/ColorPicker\";\r\nimport PageLayout from \"../components/PageLayout\";\r\nimport CodeBlock from \"../components/CodeBlock\";\r\nimport TextInput from \"../components/TextInput\";\r\nimport NumberInput from \"../components/NumberInput\";\r\nimport Button from \"../components/Button\";\r\nimport ThemeLayout from \"../components/ThemeLayout\";\r\nimport ThemeOption from \"../components/ThemeOption\";\r\nimport TabLayout from \"../components/TabLayout\";\r\nimport Tab from \"../components/Tab\";\r\nimport TabPanel from \"../components/TabPanel\";\r\nimport VerticalLayout from \"../components/VerticalLayout\";\r\nimport HorizontalLayout from \"../components/HorizontalLayout\";\r\nimport SidebarLayout from \"../components/SidebarLayout\";\r\nimport Divider from \"../components/Divider\";\r\nimport Badge from \"../components/Badge\";\r\nimport ThemeGenerator from \"../components/ThemeGenerator\";\r\nimport {\r\n  calculateColor,\r\n  getSavedThemes,\r\n  saveTheme,\r\n  generateTheme,\r\n} from \"../utils\";\r\n\r\nconst DEFAULT_SCHEME = \"analogous\";\r\n\r\nconst DEFAULT_COLORS = generateTheme(DEFAULT_SCHEME, true).map(\r\n  (color, colorIndex) => ({\r\n    color,\r\n    name: `color-${colorIndex + 1}`,\r\n    increment: 18,\r\n    index: 3,\r\n  })\r\n);\r\n\r\nconst DEFAULT_STATE = {\r\n  editingIndex: 0,\r\n  isEditing: false,\r\n  saved: true,\r\n  saveKey: null,\r\n  savedThemes: getSavedThemes(),\r\n  theme: {\r\n    generator: {\r\n      locked: false,\r\n      scheme: DEFAULT_SCHEME,\r\n      base: \"\",\r\n    },\r\n    name: \"\",\r\n    segmentLength: 9,\r\n    colors: DEFAULT_COLORS,\r\n    // colors: [\r\n    //   {\r\n    //     color: \"#0073B8\",\r\n    //     name: \"primary\",\r\n    //     increment: 18,\r\n    //     index: 3,\r\n    //   },\r\n    //   {\r\n    //     color: \"#8B11A8\",\r\n    //     name: \"secondary\",\r\n    //     increment: 18,\r\n    //     index: 3,\r\n    //   },\r\n    //   {\r\n    //     color: \"#888888\",\r\n    //     name: \"neutral\",\r\n    //     increment: 18,\r\n    //     index: 3,\r\n    //   },\r\n    // ],\r\n  },\r\n};\r\n\r\nconst HomePage = () => {\r\n  const [state, dispatchRaw] = useReducer((oldState, action) => {\r\n    const [type, data] = action;\r\n\r\n    const state = clone(oldState);\r\n\r\n    switch (type) {\r\n      case \"START_EDIT\": {\r\n        const [value] = data;\r\n        state.isEditing = true;\r\n        state.editingIndex = value;\r\n        break;\r\n      }\r\n      case \"STOP_EDIT\": {\r\n        state.isEditing = false;\r\n        break;\r\n      }\r\n      case \"SAVED\": {\r\n        const [saveKey] = data;\r\n        state.saveKey = saveKey;\r\n        state.saved = true;\r\n        state.savedThemes = getSavedThemes();\r\n\r\n        break;\r\n      }\r\n      case \"LOAD\": {\r\n        const [key, theme] = data;\r\n\r\n        state.saveKey = key;\r\n        state.theme = clone(theme);\r\n        state.saved = true;\r\n        break;\r\n      }\r\n      case \"SET_GENERATOR\": {\r\n        const [generator] = data;\r\n        state.theme.generator = generator;\r\n        break;\r\n      }\r\n      case \"GENERATED\": {\r\n        const [colors] = data;\r\n        state.theme.colors = colors.map((color, colorIndex) => ({\r\n          color,\r\n          name: `color-${colorIndex + 1}`,\r\n          increment: 18,\r\n          index: 3,\r\n        }));\r\n        break;\r\n      }\r\n      case \"ADD_COLOR\": {\r\n        state.theme.colors.push({\r\n          color: \"#888888\",\r\n          name: \"color\",\r\n          increment: 18,\r\n          index: 3,\r\n        });\r\n        state.isEditing = true;\r\n        state.editingIndex = state.theme.colors.length - 1;\r\n        break;\r\n      }\r\n      case \"SET_NAME\": {\r\n        const [name] = data;\r\n        state.theme.name = name;\r\n        state.saved = false;\r\n        break;\r\n      }\r\n      case \"SET_COLOR\": {\r\n        const [index, color] = data;\r\n        state.theme.colors[index].color = color;\r\n        state.saved = false;\r\n        break;\r\n      }\r\n      case \"SET_COLOR_NAME\": {\r\n        const [index, name] = data;\r\n        state.theme.colors[index].name = name;\r\n        state.saved = false;\r\n        break;\r\n      }\r\n      case \"SET_COLOR_INCREMENT\": {\r\n        const [index, increment] = data;\r\n        state.theme.colors[index].increment = increment;\r\n        state.saved = false;\r\n        break;\r\n      }\r\n      case \"SET_COLOR_INDEX\": {\r\n        const [index, indexValue] = data;\r\n        state.theme.colors[index].index = indexValue;\r\n        state.saved = false;\r\n        break;\r\n      }\r\n      default: {\r\n        throw new Error(`${type} is not a valid action type.`);\r\n      }\r\n    }\r\n\r\n    return state;\r\n  }, DEFAULT_STATE);\r\n  const dispatch = (...args) => dispatchRaw(args);\r\n\r\n  console.log({ state });\r\n\r\n  const colorSegments = state.theme.colors.map((color) => {\r\n    return [...new Array(9)].map((_, i) => (i - color.index) * color.increment);\r\n  });\r\n\r\n  const exportText = (() => {\r\n    let s = \"\";\r\n\r\n    state.theme.colors.forEach((color, colorIndex) => {\r\n      colorSegments[colorIndex].forEach((segmentDelta, segmentIndex) => {\r\n        const hex = calculateColor(color.color, segmentDelta);\r\n        s += `--color-${color.name}-${(segmentIndex + 1) * 100}: ${hex};\\n`;\r\n      });\r\n\r\n      s += \"\\n\";\r\n    });\r\n\r\n    return s;\r\n  })();\r\n\r\n  return (\r\n    <PageLayout>\r\n      <h1>Color Theme Generator</h1>\r\n      <TabLayout>\r\n        <Tab>Generator</Tab>\r\n        <TabPanel>\r\n          <SidebarLayout\r\n            rightSidebar={\r\n              <>\r\n                <VerticalLayout>\r\n                  <div>{state.saveKey ? \"Current Save\" : \"Unsaved Theme\"}</div>\r\n                  <div>\r\n                    <TextInput\r\n                      value={state.theme.name}\r\n                      onChange={(e) => dispatch(\"SET_NAME\", [e.target.value])}\r\n                      placeholder=\"Theme Name\"\r\n                    />\r\n                  </div>\r\n                  <HorizontalLayout>\r\n                    <Button\r\n                      isDisabled={!state.saveKey}\r\n                      onClick={() => {\r\n                        const key = saveTheme(state.theme, state.saveKey);\r\n                        dispatch(\"SAVED\", [key]);\r\n                      }}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        const key = saveTheme(state.theme, null);\r\n                        dispatch(\"SAVED\", [key]);\r\n                      }}\r\n                    >\r\n                      Save As New\r\n                    </Button>\r\n                  </HorizontalLayout>\r\n                  <div>\r\n                    {state.saved ? (\r\n                      <Badge success>Saved</Badge>\r\n                    ) : (\r\n                      <Badge error>Unsaved Changes</Badge>\r\n                    )}\r\n                  </div>\r\n                </VerticalLayout>\r\n                <Divider />\r\n                <ThemeLayout>\r\n                  {state.savedThemes.map((save, themeIndex) => (\r\n                    <ThemeOption\r\n                      key={themeIndex}\r\n                      isActive={save.key === state.saveKey}\r\n                      theme={save.theme}\r\n                      onClick={() => dispatch(\"LOAD\", [save.key, save.theme])}\r\n                    />\r\n                  ))}\r\n                </ThemeLayout>\r\n              </>\r\n            }\r\n          >\r\n            <h3>1. Generate</h3>\r\n            <ThemeGenerator\r\n              theme={state.theme}\r\n              onGeneratorChange={(generator) =>\r\n                dispatch(\"SET_GENERATOR\", [generator])\r\n              }\r\n              onGenerate={(colors) => dispatch(\"GENERATED\", [colors])}\r\n            />\r\n            <h3>2. Alter</h3>\r\n            {state.theme.colors.map((color, colorIndex) => {\r\n              const isEditing =\r\n                state.isEditing && state.editingIndex === colorIndex;\r\n\r\n              return (\r\n                <div key={colorIndex}>\r\n                  <ColorRow>\r\n                    <ColorCellLayout\r\n                      isEditing={isEditing}\r\n                      onClick={() => dispatch(\"START_EDIT\", [colorIndex])}\r\n                    >\r\n                      <ColorCell color={color.color} />\r\n                    </ColorCellLayout>\r\n                    <ColorCellLayout>\r\n                      {colorSegments[colorIndex].map(\r\n                        (segmentDelta, segmentIndex) => (\r\n                          <ColorCell\r\n                            key={segmentIndex}\r\n                            color={calculateColor(color.color, segmentDelta)}\r\n                            isIndex={segmentDelta === 0}\r\n                            isEditing={isEditing}\r\n                            delta={segmentDelta}\r\n                          />\r\n                        )\r\n                      )}\r\n                    </ColorCellLayout>\r\n                  </ColorRow>\r\n                </div>\r\n              );\r\n            })}\r\n            <div>\r\n              <Button onClick={() => dispatch(\"ADD_COLOR\")}>Add Color</Button>\r\n            </div>\r\n            <h3>3. Export</h3>\r\n            <div>\r\n              <VerticalLayout>\r\n                {state.theme.colors.map((color, colorIndex) => (\r\n                  <HorizontalLayout key={colorIndex}>\r\n                    <ColorCellSmall style={{ backgroundColor: color.color }} />\r\n                    <TextInput\r\n                      value={color.name}\r\n                      onChange={(e) =>\r\n                        dispatch(\"SET_COLOR_NAME\", [colorIndex, e.target.value])\r\n                      }\r\n                    />\r\n                  </HorizontalLayout>\r\n                ))}\r\n              </VerticalLayout>\r\n            </div>\r\n            <CodeBlock text={exportText} />\r\n          </SidebarLayout>\r\n\r\n          <SlideOutPanel\r\n            isOpen={state.isEditing}\r\n            onClose={() => dispatch(\"STOP_EDIT\")}\r\n          >\r\n            {state.theme.colors[state.editingIndex] && (\r\n              <React.Fragment key={state.editingIndex}>\r\n                <VerticalLayout>\r\n                  <h2>Color Picker</h2>\r\n                  <ColorPicker\r\n                    color={state.theme.colors[state.editingIndex].color}\r\n                    setColor={(newColor) =>\r\n                      dispatch(\"SET_COLOR\", [state.editingIndex, newColor])\r\n                    }\r\n                  />\r\n                  <NumberInput\r\n                    label=\"Value Increment\"\r\n                    value={state.theme.colors[state.editingIndex].increment}\r\n                    onChange={(value) =>\r\n                      dispatch(\"SET_COLOR_INCREMENT\", [\r\n                        state.editingIndex,\r\n                        value,\r\n                      ])\r\n                    }\r\n                    increment={0.5}\r\n                    formatter={(n) => `${n}%`}\r\n                  />\r\n                  <NumberInput\r\n                    label=\"Center Position\"\r\n                    value={state.theme.colors[state.editingIndex].index}\r\n                    onChange={(value) =>\r\n                      dispatch(\"SET_COLOR_INDEX\", [state.editingIndex, value])\r\n                    }\r\n                    formatter={(n) => n + 1}\r\n                  />\r\n                </VerticalLayout>\r\n              </React.Fragment>\r\n            )}\r\n          </SlideOutPanel>\r\n        </TabPanel>\r\n\r\n        <Tab>Methodology</Tab>\r\n        <TabPanel>\r\n          <h3>Methodology - Work In Progress</h3>\r\n          <p>\r\n            Information about the methodology for generating colors will\r\n            eventually be published here.\r\n          </p>\r\n        </TabPanel>\r\n\r\n        <Tab>About</Tab>\r\n        <TabPanel>\r\n          <h3>About - Work In Progress</h3>\r\n          <p>\r\n            Information about the tool, code, and author will eventually be\r\n            published here.\r\n          </p>\r\n        </TabPanel>\r\n      </TabLayout>\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nimport \"normalize.css\";\r\nimport \"./transitions.css\";\r\nimport \"./App.css\";\r\n\r\nimport HomePage from \"../pages/HomePage\";\r\nimport NotificationManager from \"../project/NotificationManager\";\r\n\r\nfunction App() {\r\n  return (\r\n    <NotificationManager>\r\n      <HomePage />\r\n    </NotificationManager>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './project/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}